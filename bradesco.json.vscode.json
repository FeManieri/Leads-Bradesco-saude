{
  "name": "Bradesco_Qualificacao_Inteligente",
  "nodes": [
    {
      "parameters": {
        "path": "bradesco-landing",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1",
      "name": "Recebe Formul√°rio Landing",
      "type": "n8n-nodes-base.webhook",
      "position": [250, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "functionCode": "// AN√ÅLISE COMPLETA DO CAMPO MENSAGEM OPCIONAL\nfunction analisarMensagemOpcional(mensagem) {\n  if (!mensagem) return { dados_faltantes: ['idades_dependentes', 'tipo_documento', 'hospital_preferencia', 'plano_atual'] };\n  \n  function removerAcentos(str) {\n    return str.normalize(\"NFD\").replace(/[\u0300-\\u036f]/g, \"\");\n  }\n  const msg = removerAcentos(mensagem.toLowerCase());\n  const dadosExtraidos = {\n    idades_informadas: [],\n    tem_cnpj: false,\n    tem_mei: false,\n    tem_cpf: false,\n    hospital_mencionado: null,\n    plano_atual: null,\n    doencas_mencionadas: [],\n    dados_faltantes: []\n  };\n\n  // EXTRA√á√ÉO DE IDADES\n  const padraoIdades = [\n    /(\\w+)\\s+(?:de\\s+)?(\\d{1,2})\\s*(?:anos?)?/gi,\n    /(\\d{1,2})\\s*(?:anos?)?\\s+(\\w+)/gi,\n    /(\\d{1,2})\\s*(?:anos?)?/gi\n  ];\n  \n  padraoIdades.forEach(padrao => {\n    let match;\n    while ((match = padrao.exec(mensagem)) !== null) {\n      let idade = match[0].match(/\\d+/)?.[0];\n      if (idade && parseInt(idade) < 120) {\n        dadosExtraidos.idades_informadas.push(parseInt(idade));\n      }\n    }\n  });\n\n  // EXTRA√á√ÉO CNPJ/MEI/CPF\n  if (/cnpj|empresa|mei|ltda/.test(msg)) {\n    dadosExtraidos.tem_cnpj = true;\n  } else if (/cpf|pessoa.?f[√≠i]sica/.test(msg)) {\n    dadosExtraidos.tem_cpf = true;\n  }\n\n  // EXTRA√á√ÉO HOSPITAIS\n  const hospitais = ['einstein', 'sirio', 'oswaldo', 'beneficencia', 'samaritano', 'santa catarina', 'sao camilo', '9 de julho', 'copa star'];\n  hospitais.forEach(h => {\n    if (msg.includes(h)) {\n      dadosExtraidos.hospital_mencionado = h;\n    }\n  });\n\n  // EXTRA√á√ÉO PLANO ATUAL\n  const planos = ['amil', 'sulamerica', 'unimed', 'notredame', 'hapvida', 'prevent'];\n  planos.forEach(p => {\n    if (msg.includes(p)) {\n      dadosExtraidos.plano_atual = p;\n    }\n  });\n\n  // EXTRA√á√ÉO DOEN√áAS\n  if (/cancer|c√¢ncer|dialise|transplante/.test(msg)) {\n    dadosExtraidos.doenca_grave = true;\n  }\n  if (/diabetes|press√£o|hipertens/.test(msg)) {\n    dadosExtraidos.doenca_controlavel = true;\n  }\n\n  // PORTABILIDADE\n  if (/portabilidade|migrar|trocar\\s*plano|mudar\\s*plano|transferir|aproveitar\\s*car[√™e]ncia/.test(msg)) {\n    dadosExtraidos.quer_portabilidade = true;\n  }\n\n  // Define o que falta\n  if (dadosExtraidos.idades_informadas.length === 0) {\n    dadosExtraidos.dados_faltantes.push('idades_dependentes');\n  }\n  if (!dadosExtraidos.tem_cnpj && !dadosExtraidos.tem_cpf) {\n    dadosExtraidos.dados_faltantes.push('tipo_documento');\n  }\n  if (!dadosExtraidos.hospital_mencionado) {\n    dadosExtraidos.dados_faltantes.push('hospital_preferencia');\n  }\n  if (!dadosExtraidos.plano_atual && !dadosExtraidos.quer_portabilidade) {\n    dadosExtraidos.dados_faltantes.push('plano_atual');\n  }\n\n  return dadosExtraidos;\n}\n\n// PREPARA√á√ÉO INICIAL DOS DADOS\nconst dados = $input.item.json;\n\n// Analisa campo mensagem ANTES de qualquer coisa\nconst analise_mensagem = analisarMensagemOpcional(dados.mensagem);\n\n// Limpa telefone\nconst telefone = dados.telefone.replace(/[^0-9]/g, '');\nconst telefoneWhats = telefone.length === 11 ? telefone : '11' + telefone;\n\n// Calcula idade\nlet idade = null;\nif (dados.nascimento) {\n  const nascimento = new Date(dados.nascimento);\n  if (!isNaN(nascimento.getTime())) {\n    const hoje = new Date();\n    idade = hoje.getFullYear() - nascimento.getFullYear();\n    const mes = hoje.getMonth() - nascimento.getMonth();\n    if (mes < 0 || (mes === 0 && hoje.getDate() < nascimento.getDate())) {\n      idade--;\n    }\n  }\n}\n\n// Classifica√ß√£o inicial considerando TUDO\nlet classificacao = 'ANALISAR';\nlet score = 50;\n\n// NOVA L√ìGICA: todos seguem para coleta, s√≥ muda classifica√ß√£o\nif (analise_mensagem.quer_portabilidade) {\n  classificacao = 'PORTABILIDADE';\n  score = 80;\n} else if (analise_mensagem.doenca_grave || idade >= 67) {\n  classificacao = 'FRIO';\n  score = 20;\n} else if (dados.vidas < 3) {\n  classificacao = 'MORNO';\n  score = 40;\n} else {\n  classificacao = 'QUENTE';\n  score = 70;\n}\n\n// Monta objeto final com TUDO\nreturn {\n  ...dados,\n  lead_id: `BD_${Date.now()}_${telefone.slice(-4)}`,\n  telefone_limpo: telefoneWhats,\n  telefone_whatsapp: `55${telefoneWhats}@s.whatsapp.net`,\n  idade_titular: idade,\n  classificacao_inicial: classificacao,\n  score_inicial: score,\n  dados_extraidos_mensagem: analise_mensagem,\n  dados_faltantes: analise_mensagem.dados_faltantes,\n  timestamp: new Date().toISOString(),\n  horario: new Date().getHours() < 12 ? 'Bom dia' : new Date().getHours() < 18 ? 'Boa tarde' : 'Boa noite'\n};"
      },
      "id": "2",
      "name": "Processar Dados Iniciais",
      "type": "n8n-nodes-base.code",
      "position": [450, 300],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "{{$env.SHEET_ID_BRUTOS}}",
        "sheetName": "Leads_Brutos",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome Completo": "={{$json.nome}}",
            "Telefone com DDD": "={{$json.telefone}}",
            "E-mail": "={{$json.email}}",
            "Data de Nascimento": "={{$json.nascimento}}",
            "Estado": "={{$json.estado}}",
            "Cidade": "={{$json.cidade}}",
            "N√∫mero de Vidas": "={{$json.vidas}}",
            "Mensagem": "={{$json.mensagem}}",
            "Lead_ID": "={{$json.lead_id}}",
            "Idade_Calculada": "={{$json.idade_titular}}",
            "Status": "Novo - Aguardando IA"
          }
        },
        "options": {}
      },
      "id": "3",
      "name": "Salvar Google Sheets Brutos",
      "type": "n8n-nodes-base.googleSheets",
      "position": [650, 200],
      "typeVersion": 4
    },
    {
      "parameters": {
        "sendTo": "contato@abmixcorretora.com.br",
        "subject": "üîî Novo Lead #{{$json.lead_id}} - {{$json.nome}}",
        "emailType": "html",
        "message": "<h2>Novo Lead Recebido - ABMix Corretora</h2>\n<table border='1' style='border-collapse:collapse'>\n<tr><td><b>ID:</b></td><td>{{$json.lead_id}}</td></tr>\n<tr><td><b>Nome:</b></td><td>{{$json.nome}}</td></tr>\n<tr><td><b>Telefone:</b></td><td>{{$json.telefone}}</td></tr>\n<tr><td><b>Email:</b></td><td>{{$json.email}}</td></tr>\n<tr><td><b>Idade:</b></td><td>{{$json.idade_titular}} anos</td></tr>\n<tr><td><b>Local:</b></td><td>{{$json.cidade}}/{{$json.estado}}</td></tr>\n<tr><td><b>Vidas:</b></td><td>{{$json.vidas}}</td></tr>\n<tr><td><b>Mensagem:</b></td><td>{{$json.mensagem}}</td></tr>\n<tr><td><b>Classifica√ß√£o:</b></td><td>{{$json.classificacao_inicial}}</td></tr>\n</table>\n<p><i>Atendimento autom√°tico iniciado via WhatsApp</i></p>",
        "options": {}
      },
      "id": "4",
      "name": "Email Controle Interno",
      "type": "n8n-nodes-base.gmail",
      "position": [650, 400],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            { "name": "phone", "value": "={{'55' + $json.telefone_limpo}}" },
            { "name": "message", "value": "Ol√° Dr(a). {{$json.nome}}!\n\nSou a Mariana, consultora especialista Bradesco Sa√∫de.\n\nRecebi sua solicita√ß√£o! üòä\n\nVou fazer algumas perguntinhas r√°pidas para conseguir as melhores op√ß√µes.\n\nEnquanto isso, se tiver alguma d√∫vida espec√≠fica, fique √† vontade para perguntar.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de" }
          ]
        },
        "options": {}
      },
      "id": "5",
      "name": "WhatsApp Resposta Inicial",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "amount": 50,
        "unit": "seconds"
      },
      "id": "6",
      "name": "Aguardar Resposta ou 50seg",
      "type": "n8n-nodes-base.wait",
      "position": [1050, 300],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/update-presence",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.telefone_limpo}}"
            },
            {
              "name": "presence",
              "value": "composing"
            }
          ]
        },
        "options": {}
      },
      "id": "7",
      "name": "Status Digitando ON",
      "type": "n8n-nodes-base.httpRequest",
      "position": [1250, 200],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "functionCode": "// PROMPT COMPLETO DA MARIANA COM QUALIFICA√á√ÉO E INSTRU√á√ïES DETALHADAS\n\nconst promptSistema = `Voc√™ √© a Mariana, consultora da Bradesco Sa√∫de com 10 anos de experi√™ncia.\n\nCOMPORTAMENTO:\n- Profissional, cordial, humanizada, calorosa e emp√°tica.\n- Sempre pare√ßa humana: reconhe√ßa o que o cliente diz, agrade√ßa, adapte o tom conforme o perfil, nunca seja rob√≥tica.\n- Use emojis com modera√ß√£o (üòä ‚úÖ üìå üíô).\n- Adapte a sauda√ß√£o conforme hor√°rio (bom dia/tarde/noite).\n- Trate m√©dicos como \"Dr(a).\".\n- Assine sempre: ‚Äî Mariana ¬∑ Bradesco Sa√∫de.\n- Se o cliente demonstrar inseguran√ßa, reforce acolhimento e seguran√ßa.\n- Se o cliente pedir agilidade, seja objetiva e r√°pida.\n- Se o cliente for idoso, seja ainda mais respeitosa e clara.\n- Se o cliente pedir para falar com humano, encaminhe imediatamente e avise.\n\nPLANOS BRADESCO:\n- Efetivo: B√°sico, rede essencial\n- Flex: Intermedi√°rio, rede ampliada\n- Ideal: Digital, rede completa\n- Nacional: Cobertura Brasil todo\n- Nacional Plus: Premium com Einstein/S√≠rio\n- Premium: Top com Copa Star/Samaritano\n\nREDE HOSPITALAR S√ÉO PAULO:\n- Efetivo: Benefic√™ncia Portuguesa\n- Flex: + Santa Paula, S√£o Camilo\n- Ideal: + 9 de Julho, Santa Joana\n- Nacional: + Oswaldo Cruz, Santa Catarina\n- Nacional Plus: + Einstein, S√≠rio-Liban√™s\n- Premium: + Copa Star, Samaritano, Vila Nova Star\n\nHOSPITAIS RIO DE JANEIRO:\n- Copa D'Or, Quinta D'Or (Nacional Plus/Premium)\n- Samaritano, Barra D'Or (Nacional/Ideal)\n- Casa de Sa√∫de S√£o Jos√© (Flex)\n\nCAR√äNCIAS:\n- Urg√™ncia/Emerg√™ncia: 24 horas\n- Consultas: 30 dias\n- Exames simples: 30 dias\n- Exames complexos: 180 dias\n- Interna√ß√µes: 180 dias\n- Parto: 300 dias\n- Doen√ßas preexistentes: 24 meses\n\nREGRAS PRINCIPAIS:\n- M√≠nimo 3 vidas\n- CNPJ/MEI ativo 6+ meses\n- Idade limite 59 anos (acima an√°lise especial)\n- RN at√© 30 dias sem car√™ncia\n\nCONHECIMENTO BRADESCO SA√öDE:\n- Planos: Efetivo (b√°sico, rede essencial), Flex (intermedi√°rio, rede ampliada), Ideal (digital, rede completa), Nacional (Brasil todo), Nacional Plus (premium Einstein/S√≠rio), Premium (top Copa Star/Samaritano).\n- Rede hospitalar SP: Efetivo (Benefic√™ncia Portuguesa), Flex (+Santa Paula, S√£o Camilo), Ideal (+9 de Julho, Santa Joana), Nacional (+Oswaldo Cruz, Santa Catarina), Nacional Plus (+Einstein, S√≠rio), Premium (+Copa Star, Samaritano, Vila Nova Star).\n- Rede hospitalar RJ: Copa D'Or, Quinta D'Or (Nacional Plus/Premium), Samaritano, Barra D'Or (Nacional/Ideal), Casa de Sa√∫de S√£o Jos√© (Flex).\n- Car√™ncias: urg√™ncia/emerg√™ncia 24h, consultas 30 dias, exames simples 30 dias, exames complexos 180 dias, interna√ß√µes 180 dias, parto 300 dias, doen√ßas preexistentes 24 meses.\n- Regras: m√≠nimo 3 vidas, CNPJ/MEI ativo h√° 6+ meses, inclus√£o RN at√© 30 dias sem car√™ncia, inclus√£o c√¥njuge at√© 30 dias do casamento, idade limite 59 anos (acima requer an√°lise especial).\n\nREGRAS DE QUALIFICA√á√ÉO:\n1. PORTABILIDADE: Se cliente mencionar \"portabilidade\", \"migra√ß√£o\", \"trocar plano\", \"mudar de plano\", \"aproveitar car√™ncias\", \"transferir plano\"\n   ‚Üí status = \"PORTABILIDADE\"\n   ‚Üí mensagem_cliente = \"Ol√°! üòä Sobre PORTABILIDADE: Voc√™ pode pedir a portabilidade sem novas car√™ncias se cumprir as regras da ANS. Fa√ßa a solicita√ß√£o pelo canal oficial da Bradesco Sa√∫de: https://www.bradescoseguros.com.br/clientes/produtos/plano-saude/portabilidade-de-carencias Se quiser, te ajudo a conferir a elegibilidade agora.\"\n   ‚Üí Encaminhe para vendedor ap√≥s resposta.\n\n2. AN√ÅLISE HUMANA: Se idade ‚â•67 anos OU doen√ßa grave (c√¢ncer, di√°lise, transplante, cardiopatia, neurol√≥gico) OU menos de 3 vidas\n   ‚Üí status = \"ANALISE_HUMANA\"\n   ‚Üí mensagem_cliente = \"Obrigado pelas informa√ß√µes! Como seu caso necessita an√°lise especial para garantir a melhor proposta, um consultor especializado entrar√° em contato em at√© 24h √∫teis. Ele poder√° oferecer condi√ß√µes diferenciadas para sua situa√ß√£o.\"\n   ‚Üí Avise o cliente que ser√° atendido por consultor e encaminhe imediatamente ap√≥s coleta dos dados obrigat√≥rios.\n\n3. PRONTO PARA COTA√á√ÉO: Todos os demais casos\n   ‚Üí status = \"PRONTO_PARA_COTACAO\"\n   ‚Üí mensagem_cliente = Pergunte de forma clara e objetiva os dados obrigat√≥rios que faltam para qualificar o lead (m√°ximo 2 perguntas por vez, sempre agrupando o que falta em uma s√≥ mensagem).\n\nPERGUNTAS OBRIGAT√ìRIAS (sempre perguntar s√≥ o que falta, nunca repetir):\n- Idades dos dependentes (Ex: \"Pode informar as idades dos dependentes?\")\n- Tipo de contrata√ß√£o (CNPJ/MEI/CPF) (Ex: \"A contrata√ß√£o ser√° por CNPJ, MEI ou CPF?\")\n- Hospital de prefer√™ncia (Ex: \"Tem algum hospital de prefer√™ncia?\")\n- Plano atual (se n√£o for portabilidade) (Ex: \"Possui algum plano de sa√∫de atualmente?\")\n- Doen√ßas preexistentes (Ex: \"Algu√©m possui alguma doen√ßa preexistente?\")\n- Observa√ß√µes relevantes: gestante, cirurgia marcada, rec√©m-nascido, urg√™ncia, portabilidade, grupo grande\n\nEXEMPLOS DE PERGUNTAS AGRUPADAS:\n- \"Para seguir com a melhor proposta, preciso s√≥ mais essas informa√ß√µes: as idades dos dependentes e se a contrata√ß√£o ser√° por CNPJ, MEI ou CPF. Pode me informar?\"\n- \"Faltam s√≥ mais dois detalhes: tem algum hospital de prefer√™ncia? Algu√©m possui alguma doen√ßa preexistente?\"\n- \"Voc√™ j√° possui algum plano de sa√∫de atualmente? E tem algum rec√©m-nascido ou gestante na fam√≠lia?\"\n\nINSTRU√á√ïES CR√çTICAS:\n- Leia SEMPRE a mensagem completa antes de perguntar algo.\n- NUNCA repita informa√ß√µes j√° fornecidas.\n- NUNCA mencione valores (diga \"vendedor informar√° valores promocionais\").\n- M√°ximo 2 perguntas por vez, sempre agrupadas em uma so mensagem.\n- Sempre cordial e profissional.\n- S√≥ consulte portabilidade pelo canal oficial Bradesco Sa√∫de.\n\nFUNIL DE VENDAS:\n- Analise as respostas do cliente e classifique conforme regras acima.\n- Sempre colete todas as perguntas obrigat√≥rias antes de encaminhar para vendedor.\n- Quando classificar como \"ANALISE_HUMANA\", avise o cliente que ser√° atendido por consultor e encaminhe imediatamente.\n- Quando todos os dados obrigat√≥rios forem coletados, agrade√ßa e informe que o consultor especializado entrar√° em contato com uma proposta personalizada.\n- Se o cliente for PORTABILIDADE, envie a mensagem padr√£o e encaminhe para vendedor.\n- Se o cliente for PRONTO_PARA_COTACAO, colete os dados faltantes e s√≥ encaminhe ap√≥s completar.\n- Sempre registre observa√ß√µes relevantes (gestante, cirurgia marcada, rec√©m-nascido, portabilidade, urg√™ncia, grupo grande).\n\nRESUMO PARA VENDEDOR:\n- Nome completo\n- Telefone\n- E-mail\n- Cidade/Estado\n- Idade titular\n- N√∫mero de vidas\n- Idades dos dependentes\n- Tipo de contrata√ß√£o (CNPJ/MEI/CPF)\n- Hospital de prefer√™ncia\n- Plano atual\n- Doen√ßas preexistentes (grave/control√°vel)\n- Observa√ß√µes relevantes (gestante, cirurgia marcada, rec√©m-nascido, portabilidade, urg√™ncia, grupo grande)\n- Classifica√ß√£o (QUENTE/MORNO/FRIO/PORTABILIDADE/ANALISE_HUMANA)\n- Score de qualifica√ß√£o\n- Plano sugerido\n- Documentos necess√°rios\n\nDOCUMENTOS NECESS√ÅRIOS:\n- RG, CPF, comprovante de resid√™ncia\n- Cart√£o CNPJ, contrato social, √∫ltima altera√ß√£o (se empresa)\n- Relat√≥rios m√©dicos, receitas atuais (se preexist√™ncia)\n- Carteirinha plano atual, 3 √∫ltimos boletos pagos (se portabilidade)\n- Cart√£o pr√©-natal (se gestante)\n\nFORMATO DE RESPOSTA OBRIGAT√ìRIO (retorne apenas este JSON, sem markdown):\n{\n  \"status\": \"PORTABILIDADE ou ANALISE_HUMANA ou PRONTO_PARA_COTACAO\",\n  \"mensagem_cliente\": \"mensagem apropriada para WhatsApp, agrupando perguntas obrigat√≥rias que faltam em uma s√≥ mensagem\",\n  \"mensagem_vendedor\": \"Novo lead: nome, telefone, cidade/estado, X vidas, idades dependentes, tipo contrata√ß√£o, hospital prefer√™ncia, plano atual, doen√ßas, observa√ß√µes relevantes, classifica√ß√£o, score, plano sugerido, documentos necess√°rios\",\n  \"idades_dependentes\": \"Jo√£o 35; Maria 32; Ana 8 ou vazio se n√£o informado\"\n}`;\n\nconst contexto = {\n  dados_ja_coletados: {\n    nome: $json.nome,\n    idade_titular: $json.idade_titular,\n    telefone: $json.telefone,\n    email: $json.email,\n    cidade: $json.cidade,\n    estado: $json.estado,\n    total_vidas: $json.vidas,\n    mensagem_original: $json.mensagem\n  },\n  dados_extraidos_mensagem: $json.dados_extraidos_mensagem,\n  dados_faltantes: $json.dados_faltantes,\n  classificacao_inicial: $json.classificacao_inicial,\n  score: $json.score_inicial\n};\n\n// Monta informa√ß√£o sobre o que j√° foi coletado\nlet infoColetada = 'INFORMA√á√ïES J√Å FORNECIDAS (N√ÉO PERGUNTAR):\\n';\ninfoColetada += `- Nome: ${contexto.dados_ja_coletados.nome}\\n`;\ninfoColetada += `- Idade titular: ${contexto.dados_ja_coletados.idade_titular} anos\\n`;\ninfoColetada += `- Total vidas: ${contexto.dados_ja_coletados.total_vidas}\\n`;\ninfoColetada += `- Local: ${contexto.dados_ja_coletados.cidade}/${contexto.dados_ja_coletados.estado}\\n`;\n\nif (contexto.dados_extraidos_mensagem.idades_informadas?.length > 0) {\n  infoColetada += `- Idades informadas: ${contexto.dados_extraidos_mensagem.idades_informadas.join(', ')} anos\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cnpj) {\n  infoColetada += `- Tipo documento: CNPJ/MEI\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cpf) {\n  infoColetada += `- Tipo documento: CPF\\n`;\n}\nif (contexto.dados_extraidos_mensagem.hospital_mencionado) {\n  infoColetada += `- Hospital preferido: ${contexto.dados_extraidos_mensagem.hospital_mencionado}\\n`;\n}\nif (contexto.dados_extraidos_mensagem.plano_atual) {\n  infoColetada += `- Plano atual: ${contexto.dados_extraidos_mensagem.plano_atual}\\n`;\n}\n\nreturn {\n  ...$json,\n  prompt_sistema: promptSistema,\n  contexto_conversa: JSON.stringify(contexto),\n  info_ja_coletada: infoColetada\n};"
      },
      "id": "8",
      "name": "Preparar Prompt Mariana",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1250, 400]
    },
    {
      "parameters": {
        "resource": "chat",
        "model": "gpt-4-turbo-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "Voc√™ √© a Mariana, consultora Bradesco Sa√∫de. Pt-BR, WhatsApp, cordial, humana. NUNCA repita perguntas j√° respondidas. No m√°ximo 2 perguntas por mensagem, agrupadas. N√£o invente dados. Se risco de erro, pe√ßa 1 confirma√ß√£o curta. Se PORTABILIDADE, use resposta padr√£o. Se idade ‚â•67, <3 vidas ou doen√ßa grave, encaminhe para an√°lise humana. Retorne JSON v√°lido."
            },
            {
              "role": "user",
              "content": "CONTEXTO ATUALIZADO:\n{{$json.contexto_atualizado}}\n\n√öLTIMA MENSAGEM DO CLIENTE:\n{{$json.mensagem_cliente_processada}}\n\nRETORNE APENAS JSON V√ÅLIDO:\n{\n  \"mensagem_cliente\": \"string\",\n  \"classificacao_final\": \"QUENTE|MORNO|FRIO|PORTABILIDADE|ANALISE_HUMANA\",\n  \"score_final\": 0-100,\n  \"qualificacao_completa\": true|false,\n  \"resumo_para_vendedor\": \"string (se completo)\"\n}"
            }
          ]
        },
        "options": {
          "temperature": 0.2,
          "maxTokens": 450,
          "responseFormat": { "type": "json_object" }
        }
      },
      "id": "9",
      "name": "OpenAI Primeira Qualifica√ß√£o",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [1450, 300],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/update-presence",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.telefone_limpo}}"
            },
            {
              "name": "presence",
              "value": "paused"
            }
          ]
        },
        "options": {}
      },
      "id": "12",
      "name": "Status Digitando OFF",
      "type": "n8n-nodes-base.httpRequest",
      "position": [2050, 200],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.telefone_limpo}}"
            },
            {
              "name": "message",
              "value": "Ol√°! üòä Sobre PORTABILIDADE:\n\nVoc√™ pode pedir a portabilidade sem novas car√™ncias se cumprir as regras da ANS.\n\nFa√ßa a solicita√ß√£o pelo canal oficial da Bradesco Sa√∫de:\nhttps://www.bradescoseguros.com.br/clientes/produtos/plano-saude/portabilidade-de-carencias\n\nSe quiser, te ajudo a conferir a elegibilidade agora.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
            }
          ]
        },
        "options": {}
      },
      "id": "15",
      "name": "Enviar Link Portabilidade",
      "type": "n8n-nodes-base.httpRequest",
      "position": [2450, 200],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "path": "whatsapp-webhook-evolution",
        "responseMode": "responseNode",
        "options": {
          "responseData": "firstEntryJson",
          "responseHeaders": {
            "entries": [
              {"name": "Content-Type", "value": "application/json"}
            ]
          }
        }
      },
      "id": "16",
      "name": "Webhook Resposta Cliente WhatsApp",
      "type": "n8n-nodes-base.webhook",
      "position": [2450, 500],
      "typeVersion": 1,
      "webhookId": "resposta-cliente-whatsapp"
    },
    {
      "parameters": {
        "functionCode": "// Processa resposta do cliente (texto ou √°udio)\nconst webhook = $json;\nlet mensagemCliente = '';\nlet tipoMensagem = 'texto';\nlet precisaTranscrever = false;\n\n// Verifica tipo de mensagem\nif (webhook.message?.text) {\n  mensagemCliente = webhook.message.text;\n} else if (webhook.message?.audio) {\n  tipoMensagem = 'audio';\n  precisaTranscrever = true;\n  mensagemCliente = '[√Åudio recebido - transcrevendo...]';\n} else if (webhook.message?.image) {\n  tipoMensagem = 'imagem';\n  mensagemCliente = '[Imagem recebida]';\n}\n\n// Busca contexto anterior (seria do datastore em produ√ß√£o)\nconst telefoneCliente = webhook.phone || webhook.from;\n\nreturn {\n  telefone_cliente: telefoneCliente,\n  mensagem_cliente: mensagemCliente,\n  tipo_mensagem: tipoMensagem,\n  precisa_transcrever: precisaTranscrever,\n  timestamp_resposta: new Date().toISOString(),\n  webhook_completo: webhook\n};"
      },
      "id": "17",
      "name": "Processar Resposta Cliente",
      "type": "n8n-nodes-base.code",
      "position": [2650, 500],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.precisa_transcrever}}",
              "value2": true
            }
          ]
        }
      },
      "id": "18",
      "name": "√â √Åudio?",
      "type": "n8n-nodes-base.if",
      "position": [2850, 500],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{$json.telefone_cliente}}"
            },
            {
              "name": "message",
              "value": "üéß Recebi seu √°udio! Deixa eu ouvir com aten√ß√£o..."
            }
          ]
        },
        "options": {}
      },
      "id": "19",
      "name": "Confirmar √Åudio Recebido",
      "type": "n8n-nodes-base.httpRequest",
      "position": [3050, 600],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcription",
        "model": "whisper-1",
        "binaryPropertyName": "data",
        "options": {
          "language": "pt",
          "temperature": 0.2
        }
      },
      "id": "20",
      "name": "Transcrever √Åudio OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [3250, 600],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "pass-through",
        "options": {}
      },
      "id": "21",
      "name": "Merge Respostas",
      "type": "n8n-nodes-base.merge",
      "position": [3450, 500],
      "typeVersion": 2
    },
    {
      "parameters": {
        "functionCode": "// Atualiza contexto com resposta do cliente\nconst mensagemCliente = $json.tipo_mensagem === 'audio' ? ($json.text || $json.transcricao || '[√°udio sem texto]') : $json.mensagem_cliente;\nconst contextoAnterior = JSON.parse($json.contexto_conversa || '{}');\n\n// Adiciona ao hist√≥rico\ncontextoAnterior.historico = contextoAnterior.historico || [];\ncontextoAnterior.historico.push({\n  tipo: 'cliente',\n  mensagem: mensagemCliente,\n  timestamp: new Date().toISOString()\n});\n\n// Analisa informa√ß√µes fornecidas\nconst msg = mensagemCliente.toLowerCase();\nconst dadosExtraidos = {};\n\n// Extrai idades\nconst idadesMatch = mensagemCliente.match(/\\d{1,2}\\s*anos?/gi);\nif (idadesMatch) {\n  dadosExtraidos.idades_encontradas = idadesMatch;\n  contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'idades_dependentes');\n}\n\n// Detecta CNPJ/MEI\nif (/cnpj|mei|empresa/.test(msg)) {\n  dadosExtraidos.tipo_documento = 'empresa';\n  contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'tipo_documento');\n} else if (/cpf|pessoa.?f[√≠i]sica/.test(msg)) {\n  dadosExtraidos.tipo_documento = 'cpf';\n  contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'tipo_documento');\n}\n\n// Detecta hospitais\nconst hospitais = ['einstein', 'sirio', 'oswaldo', 'beneficencia', 'samaritano', 'santa catarina', 'sao camilo', '9 de julho', 'copa star'];\nhospitais.forEach(hospital => {\n  if (msg.includes(hospital)) {\n    dadosExtraidos.hospital_preferencia = hospital;\n    contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'hospital_preferencia');\n  }\n});\n\n// Detecta planos\nconst planos = ['amil', 'sulamerica', 'unimed', 'notredame', 'hapvida', 'prevent senior'];\nplanos.forEach(plano => {\n  if (msg.includes(plano)) {\n    dadosExtraidos.plano_atual = plano;\n  }\n});\n\n// Detecta doen√ßas\nif (/diabetes|hipertens|pressao alta|cancer|cardiaco|transplante|dialise/.test(msg)) {\n  dadosExtraidos.tem_preexistencia = true;\n  const doencasGraves = /cancer|transplante|dialise|cardiaco grave/.test(msg);\n  if (doencasGraves) {\n    dadosExtraidos.doenca_grave = true;\n  }\n}\n\n// Atualiza contexto\ncontextoAnterior.dados_coletados = { ...(contextoAnterior.dados_coletados || {}), ...dadosExtraidos };\n\n// Verifica se tem todos os dados\nconst dadosCompletos = contextoAnterior.dados_faltantes.length === 0;\n\nreturn {\n  ...$json,\n  mensagem_cliente_processada: mensagemCliente,\n  dados_extraidos: dadosExtraidos,\n  contexto_atualizado: JSON.stringify(contextoAnterior),\n  dados_completos: dadosCompletos,\n  total_interacoes: contextoAnterior.historico.length\n};"
      },
      "id": "22",
      "name": "Atualizar Contexto Conversa",
      "type": "n8n-nodes-base.code",
      "position": [3650, 500],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.dados_completos}}",
              "value2": true
            }
          ]
        }
      },
      "id": "23",
      "name": "Dados Completos?",
      "type": "n8n-nodes-base.if",
      "position": [3850, 500],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "chat",
        "model": "gpt-4-turbo-preview",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "={{$json.prompt_sistema}}"
            },
            {
              "role": "user",
              "content": "CONTEXTO ATUALIZADO:\n{{$json.contexto_atualizado}}\n\n√öLTIMA MENSAGEM DO CLIENTE:\n{{$json.mensagem_cliente_processada}}\n\nContinue a conversa:\n1. Reconhe√ßa o que foi dito\n2. NUNCA repita perguntas j√° respondidas\n3. Colete o que ainda falta\n4. Se todos dados foram coletados, agrade√ßa e informe que o vendedor entrar√° em contato\n\nRETORNE JSON:\n{\n  \"mensagem_cliente\": \"resposta\",\n  \"classificacao_final\": \"QUENTE/MORNO/FRIO\",\n  \"score_final\": 0-100,\n  \"qualificacao_completa\": true/false,\n  \"resumo_para_vendedor\": \"resumo executivo se completo\"\n}"
            }
          ]
        },
        "options": {
          "temperature": 0.7,
          "responseFormat": {
            "type": "json_object"
          }
        }
      },
      "id": "24",
      "name": "OpenAI Continuar Conversa",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [4050, 600],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "functionCode": "// PREPARAR RESUMO COLORIDO E FORMATADO PARA VENDEDOR\nconst contexto = JSON.parse($input.item.json.contexto_atualizado);\nconst dados = contexto.dados_coletados;\nconst dadosIniciais = contexto.dados_ja_coletados;\n\n// Define cores e emojis por classifica√ß√£o\nlet emoji = '';\nlet cor = '';\nlet prioridade = '';\nlet tempoContato = '';\n\nswitch ($input.item.json.classificacao_final || $input.item.json.classificacao_atual) {\n  case 'QUENTE':\n    emoji = 'üî•';\n    cor = '#FF0000';\n    prioridade = 'URGENTE';\n    tempoContato = '30 MINUTOS';\n    break;\n  case 'MORNO':\n    emoji = 'üü°';\n    cor = '#FFA500';\n    prioridade = 'ALTA';\n    tempoContato = '2 HORAS';\n    break;\n  case 'FRIO':\n  case 'ANALISE_HUMANA':\n    emoji = '‚ùÑÔ∏è';\n    cor = '#0000FF';\n    prioridade = 'AN√ÅLISE ESPECIAL';\n    tempoContato = '24 HORAS';\n    break;\n  case 'PORTABILIDADE':\n    emoji = 'üîÑ';\n    cor = '#00FF00';\n    prioridade = 'VIP PORTABILIDADE';\n    tempoContato = '1 HORA';\n    break;\n}\n\nconst resumoVendedor = {\n  // IDENTIFICA√á√ÉO\n  lead_id: $input.item.json.lead_id,\n  data_hora: new Date().toISOString(),\n  emoji_status: emoji,\n  cor_prioridade: cor,\n  \n  // DADOS PESSOAIS\n  nome: dadosIniciais.nome,\n  telefone: dadosIniciais.telefone,\n  email: dadosIniciais.email,\n  idade_titular: dadosIniciais.idade_titular,\n  localizacao: `${dadosIniciais.cidade}/${dadosIniciais.estado}`,\n  \n  // DADOS DO PLANO\n  total_vidas: dadosIniciais.total_vidas,\n  idades_dependentes: dados.idades_encontradas || dados.idades_informadas || 'N√£o informado',\n  tipo_contratacao: dados.tipo_documento || 'N√£o definido',\n  hospital_preferencia: dados.hospital_preferencia || dados.hospital_mencionado || 'N√£o informado',\n  plano_atual: dados.plano_atual || 'N√£o possui',\n  preexistencias: dados.tem_preexistencia ? 'SIM - ' + (dados.doenca_grave ? 'GRAVE' : 'CONTROL√ÅVEL') : 'N√ÉO',\n  \n  // CLASSIFICA√á√ÉO\n  classificacao: $input.item.json.classificacao_final || $input.item.json.classificacao_atual,\n  score: $input.item.json.score_final || $input.item.json.score_atual,\n  prioridade: prioridade,\n  tempo_maximo_contato: tempoContato,\n  \n  // URG√äNCIA E A√á√ÉO\n  tem_urgencia: contexto.analise?.tem_urgencia || false,\n  tem_portabilidade: contexto.analise?.tem_portabilidade || false,\n  tem_gestante: dados.tem_gestante || false,\n  tem_cirurgia_marcada: dados.cirurgia_marcada || false,\n  total_interacoes: $input.item.json.total_interacoes || contexto.interacao || 1,\n  \n  // RECOMENDA√á√ÉO\n  acao_recomendada: '',\n  plano_sugerido: '',\n  documentos_necessarios: [],\n  observacoes_importantes: []\n};\n\n// Define a√ß√£o recomendada baseada em tudo\nif (dados.cirurgia_marcada) {\n  resumoVendedor.acao_recomendada = `${emoji} CIRURGIA MARCADA - Contatar IMEDIATAMENTE!`;\n  resumoVendedor.observacoes_importantes.push('‚ö†Ô∏è Cliente tem cirurgia marcada - M√ÅXIMA URG√äNCIA');\n} else if (dados.tem_gestante) {\n  resumoVendedor.acao_recomendada = `${emoji} GESTANTE - Priorizar contato em ${tempoContato}`;\n  resumoVendedor.observacoes_importantes.push('ü§∞ Gestante na fam√≠lia - aten√ß√£o car√™ncias parto');\n} else if (dadosIniciais.idade_titular >= 67 || dadosIniciais.total_vidas < 3 || dados.doenca_grave) {\n  resumoVendedor.acao_recomendada = `${emoji} AN√ÅLISE ESPECIAL - Consultor s√™nior deve avaliar`;\n  resumoVendedor.classificacao = 'ANALISE_HUMANA';\n} else if (contexto.analise?.tem_urgencia) {\n  resumoVendedor.acao_recomendada = `${emoji} URGENTE - Contatar em ${tempoContato}`;\n} else if (contexto.analise?.tem_portabilidade) {\n  resumoVendedor.acao_recomendada = `${emoji} PORTABILIDADE VIP - Tratamento priorit√°rio`;\n  resumoVendedor.observacoes_importantes.push('‚úÖ Cliente quer aproveitar car√™ncias - explicar processo');\n} else if (resumoVendedor.score > 70) {\n  resumoVendedor.acao_recomendada = `${emoji} QUENTE - Contatar em ${tempoContato}`;\n} else {\n  resumoVendedor.acao_recomendada = `${emoji} ${prioridade} - Contatar em ${tempoContato}`;\n}\n\n// Sugere plano baseado no perfil\nif (dados.hospital_preferencia?.includes('einstein') || dados.hospital_preferencia?.includes('sirio')) {\n  resumoVendedor.plano_sugerido = 'Nacional Plus ou Premium (rede top)';\n} else if (dadosIniciais.total_vidas >= 4) {\n  resumoVendedor.plano_sugerido = 'Nacional ou Ideal (melhor custo-benef√≠cio fam√≠lia)';\n} else if (dadosIniciais.idade_titular < 35 && dadosIniciais.total_vidas <= 2) {\n  resumoVendedor.plano_sugerido = 'Flex ou Ideal (jovem, rede ampla)';\n} else {\n  resumoVendedor.plano_sugerido = 'Flex ou Nacional (padr√£o recomendado)';\n}\n\n// Define documentos necess√°rios\nresumoVendedor.documentos_necessarios = ['RG', 'CPF', 'Comprovante resid√™ncia'];\nif (dados.tipo_documento === 'empresa' || dados.tem_cnpj) {\n  resumoVendedor.documentos_necessarios.push('Cart√£o CNPJ', 'Contrato Social', '√öltima altera√ß√£o');\n}\nif (dados.tem_preexistencia) {\n  resumoVendedor.documentos_necessarios.push('Relat√≥rios m√©dicos', 'Receitas atuais');\n}\nif (contexto.analise?.tem_portabilidade) {\n  resumoVendedor.documentos_necessarios.push('Carteirinha plano atual', '3 √∫ltimos boletos pagos');\n}\nif (dados.tem_gestante) {\n  resumoVendedor.documentos_necessarios.push('Cart√£o pr√©-natal');\n}\n\n// Adiciona observa√ß√µes especiais\nif (dados.tem_recem_nascido) {\n  resumoVendedor.observacoes_importantes.push('üë∂ Rec√©m-nascido - inclus√£o sem car√™ncia se <30 dias');\n}\nif (dadosIniciais.total_vidas >= 10) {\n  resumoVendedor.observacoes_importantes.push('üíº Grupo grande - verificar desconto especial');\n}\n\nreturn {\n  ...$input.item.json,\n  resumo_vendedor: resumoVendedor,\n  qualificacao_completa: true\n};"
      },
      "id": "25",
      "name": "Preparar Resumo Vendedor Completo",
      "type": "n8n-nodes-base.code",
      "position": [4050, 400],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "append",
        "sheetId": "{{$env.SHEET_ID_QUALIFICADOS}}",
        "sheetName": "Leads_Qualificados",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nome": "={{$json.resumo_vendedor.nome}}",
            "Telefone": "={{$json.resumo_vendedor.telefone}}",
            "Email": "={{$json.resumo_vendedor.email}}",
            "DataNascimento": "={{$json.nascimento}}",
            "Estado": "={{$json.estado}}",
            "Cidade": "={{$json.cidade}}",
            "NumeroVidas": "={{$json.resumo_vendedor.total_vidas}}",
            "CNPJ": "={{$json.resumo_vendedor.tipo_contratacao === 'empresa' ? 'SIM' : 'N√ÉO'}}",
            "PlanoAtual": "={{$json.resumo_vendedor.plano_atual}}",
            "HospitaisPreferencia": "={{$json.resumo_vendedor.hospital_preferencia}}",
            "DoencasPreExistentes": "={{$json.resumo_vendedor.preexistencias}}",
            "Observacoes": "={{$json.resumo_vendedor.observacoes_importantes.join('; ')}}",
            "TemDependentes": "={{$json.resumo_vendedor.total_vidas > 1 ? 'SIM' : 'N√ÉO'}}",
            "NascDependentes": "",
            "IdadesDependentes": "={{$json.resumo_vendedor.idades_dependentes}}",
            "Status": "{{$json.resumo_vendedor.emoji_status}} {{$json.resumo_vendedor.classificacao}} - Score: {{$json.resumo_vendedor.score}}/100"
          }
        },
        "options": {}
      },
      "id": "26",
      "name": "Salvar Leads Qualificados",
      "type": "n8n-nodes-base.googleSheets",
      "position": [4250, 300],
      "typeVersion": 4
    },
    {
      "parameters": {
        "sendTo": "={{$json.destino_email}}",
        "subject": "{{$json.resumo_vendedor.emoji_status}} Lead {{$json.resumo_vendedor.classificacao}} - {{$json.resumo_vendedor.nome}} - Score: {{$json.resumo_vendedor.score}}/100",
        "emailType": "html",
        "message": "<div style='font-family: Arial, sans-serif'>\n<div style='background: linear-gradient(90deg, {{$json.resumo_vendedor.cor_prioridade}}, #c1272d); padding: 20px; color: white; text-align: center'>\n<h1>{{$json.resumo_vendedor.emoji_status}} LEAD {{$json.resumo_vendedor.classificacao}} - BRADESCO SA√öDE</h1>\n<h2>‚è∞ CONTATAR EM: {{$json.resumo_vendedor.tempo_maximo_contato}}</h2>\n</div>\n\n<div style='background: #f9f9f9; padding: 20px; margin: 10px 0; border-left: 5px solid {{$json.resumo_vendedor.cor_prioridade}}'>\n<h2 style='color: {{$json.resumo_vendedor.cor_prioridade}}'>{{$json.resumo_vendedor.acao_recomendada}}</h2>\n</div>\n\n<div style='padding: 20px'>\n<h3>üìã DADOS PESSOAIS:</h3>\n<table style='width: 100%; border-collapse: collapse'>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Nome:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.nome}}</td></tr>\n<tr><td style='padding: 10px; border: 1px solid #ddd'><b>Telefone:</b></td><td style='padding: 10px; border: 1px solid #ddd'><a href='tel:{{$json.resumo_vendedor.telefone}}'>{{$json.resumo_vendedor.telefone}}</a></td></tr>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Email:</b></td><td style='padding: 10px; border: 1px solid #ddd'><a href='mailto:{{$json.resumo_vendedor.email}}'>{{$json.resumo_vendedor.email}}</a></td></tr>\n<tr><td style='padding: 10px; border: 1px solid #ddd'><b>Idade:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.idade_titular}} anos</td></tr>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Local:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.localizacao}}</td></tr>\n</table>\n\n<h3>üë• INFORMA√á√ïES DO PLANO:</h3>\n<table style='width: 100%; border-collapse: collapse'>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Total Vidas:</b></td><td style='padding: 10px; border: 1px solid #ddd'><b style='font-size: 18px'>{{$json.resumo_vendedor.total_vidas}}</b></td></tr>\n<tr><td style='padding: 10px; border: 1px solid #ddd'><b>Dependentes:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.idades_dependentes}}</td></tr>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Tipo:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.tipo_contratacao}}</td></tr>\n<tr><td style='padding: 10px; border: 1px solid #ddd'><b>Hospital:</b></td><td style='padding: 10px; border: 1px solid #ddd'><b>{{$json.resumo_vendedor.hospital_preferencia}}</b></td></tr>\n<tr style='background: #f0f0f0'><td style='padding: 10px; border: 1px solid #ddd'><b>Plano Atual:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.plano_atual}}</td></tr>\n<tr><td style='padding: 10px; border: 1px solid #ddd'><b>Preexist√™ncias:</b></td><td style='padding: 10px; border: 1px solid #ddd'>{{$json.resumo_vendedor.preexistencias}}</td></tr>\n</table>\n\n<h3>üìä AN√ÅLISE E SCORING:</h3>\n<div style='background: #f0f0f0; padding: 15px; border-radius: 5px'>\n<div style='display: flex; justify-content: space-around'>\n<div><b>Score:</b> <span style='font-size: 24px; color: {{$json.resumo_vendedor.cor_prioridade}}'>{{$json.resumo_vendedor.score}}/100</span></div>\n<div><b>Prioridade:</b> <span style='font-size: 18px'>{{$json.resumo_vendedor.prioridade}}</span></div>\n<div><b>Intera√ß√µes:</b> {{$json.resumo_vendedor.total_interacoes}}</div>\n</div>\n</div>\n\n{{$json.resumo_vendedor.tem_urgencia || $json.resumo_vendedor.tem_portabilidade || $json.resumo_vendedor.tem_gestante || $json.resumo_vendedor.tem_cirurgia_marcada ? \"<h3>‚ö†Ô∏è ALERTAS IMPORTANTES:</h3><div style='background: #fff3cd; padding: 15px; border: 1px solid #ffc107'>\" : \"\"}}\n{{$json.resumo_vendedor.tem_urgencia ? \"<p>üö® <b>CLIENTE COM URG√äNCIA</b></p>\" : \"\"}}\n{{$json.resumo_vendedor.tem_portabilidade ? \"<p>üîÑ <b>DESEJA PORTABILIDADE - Explicar processo ANS</b></p>\" : \"\"}}\n{{$json.resumo_vendedor.tem_gestante ? \"<p>ü§∞ <b>GESTANTE NA FAM√çLIA - Aten√ß√£o car√™ncias parto</b></p>\" : \"\"}}\n{{$json.resumo_vendedor.tem_cirurgia_marcada ? \"<p>‚ö° <b>CIRURGIA MARCADA - M√ÅXIMA URG√äNCIA!</b></p>\" : \"\"}}\n{{$json.resumo_vendedor.tem_urgencia || $json.resumo_vendedor.tem_portabilidade || $json.resumo_vendedor.tem_gestante || $json.resumo_vendedor.tem_cirurgia_marcada ? \"</div>\" : \"\"}}\n\n<h3>üíº PLANO RECOMENDADO:</h3>\n<div style='background: #d4edda; padding: 15px; border: 1px solid #28a745'>\n<p style='font-size: 18px; margin: 0'><b>{{$json.resumo_vendedor.plano_sugerido}}</b></p>\n</div>\n\n<h3>üìÑ DOCUMENTOS NECESS√ÅRIOS:</h3>\n<ul style='background: #f8f9fa; padding: 20px'>\n{{$json.resumo_vendedor.documentos_necessarios.map(doc => '<li>' + doc + '</li>').join('')}}\n</ul>\n\n{{$json.resumo_vendedor.observacoes_importantes.length > 0 ? \"<h3>üìù OBSERVA√á√ïES:</h3><div style='background: #e9ecef; padding: 15px'>\" + $json.resumo_vendedor.observacoes_importantes.map(obs => '<p>' + obs + '</p>').join('') + \"</div>\" : \"\"}}\n\n<hr style='margin-top: 30px'>\n<p style='text-align: center; color: #666'><i>Lead qualificado pelo sistema Mariana IA - ABMix Corretora - {{new Date().toLocaleString('pt-BR')}}</i></p>\n</div>",
        "options": {}
      },
      "id": "27",
      "name": "Email Vendedor Rico Formatado",
      "type": "n8n-nodes-base.gmail",
      "position": [4450, 300],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.destino_phone}}"
            },
            {
              "name": "message",
              "value": "üî• *LEAD {{$json.resumo_vendedor.classificacao}}*\n*Score:* {{$json.resumo_vendedor.score}}/100\n\nüë§ *Cliente:* {{$json.resumo_vendedor.nome}}\nüì± *Tel:* {{$json.resumo_vendedor.telefone}}\nüìç *Local:* {{$json.resumo_vendedor.localizacao}}\nüë• *Vidas:* {{$json.resumo_vendedor.total_vidas}}\nüè• *Hospital:* {{$json.resumo_vendedor.hospital_preferencia}}\n\n‚ö° *A√á√ÉO:* {{$json.resumo_vendedor.acao_recomendada}}\n\nüíº *Plano Sugerido:* {{$json.resumo_vendedor.plano_sugerido}}\n\n{{$json.resumo_vendedor.tem_urgencia ? 'üö® CLIENTE COM URG√äNCIA!' : ''}}{{$json.resumo_vendedor.tem_portabilidade ? 'üîÑ PORTABILIDADE!' : ''}}\n\nüìß Detalhes completos no email"
            }
          ]
        },
        "options": {}
      },
      "id": "28",
      "name": "WhatsApp Vendedor",
      "type": "n8n-nodes-base.httpRequest",
      "position": [4650, 300],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.agendor.com.br/v3/deals",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Token {{$env.AGENDOR_TOKEN}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "{{$json.resumo_vendedor.nome}} - Bradesco {{$json.resumo_vendedor.total_vidas}} vidas"
            },
            {
              "name": "value",
              "value": "={{$json.resumo_vendedor.total_vidas * 500}}"
            },
            {
              "name": "dealStage",
              "value": "{{$json.resumo_vendedor.classificacao === 'QUENTE' ? 1 : $json.resumo_vendedor.classificacao === 'MORNO' ? 2 : 3}}"
            },
            {
              "name": "contact",
              "value": {
                "name": "={{$json.resumo_vendedor.nome}}",
                "phones": [{"number": "={{$json.resumo_vendedor.telefone}}", "type": "mobile"}],
                "emails": [{"email": "={{$json.resumo_vendedor.email}}"}],
                "address": {"city": "={{$json.resumo_vendedor.localizacao}}"}
              }
            },
            {
              "name": "description",
              "value": "Lead qualificado automaticamente\n\nClassifica√ß√£o: {{$json.resumo_vendedor.classificacao}}\nScore: {{$json.resumo_vendedor.score}}/100\nVidas: {{$json.resumo_vendedor.total_vidas}}\nIdade: {{$json.resumo_vendedor.idade_titular}}\nHospital: {{$json.resumo_vendedor.hospital_preferencia}}\nPreexist√™ncias: {{$json.resumo_vendedor.preexistencias}}\nUrg√™ncia: {{$json.resumo_vendedor.tem_urgencia ? 'SIM' : 'N√ÉO'}}\nPortabilidade: {{$json.resumo_vendedor.tem_portabilidade ? 'SIM' : 'N√ÉO'}}\n\nA√ß√£o: {{$json.resumo_vendedor.acao_recomendada}}\nPlano Sugerido: {{$json.resumo_vendedor.plano_sugerido}}"
            },
            {
              "name": "ranking",
              "value": "={{Math.floor($json.resumo_vendedor.score / 20)}}"
            }
          ]
        },
        "options": {}
      },
      "id": "29",
      "name": "Criar Deal Agendor",
      "type": "n8n-nodes-base.httpRequest",
      "position": [4850, 300],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.telefone_limpo}}"
            },
            {
              "name": "message",
              "value": "{{$json.resumo_vendedor.nome}}, foi √≥timo conversar com voc√™! üíô\n\nConsegui todas as informa√ß√µes necess√°rias e j√° identifiquei op√ß√µes interessantes pro seu perfil.\n\nSeu consultor especializado entrar√° em contato nas pr√≥ximas horas com uma proposta personalizada.\n\n‚úÖ Ele tem autoriza√ß√£o para aplicar condi√ß√µes especiais!\n\nQualquer d√∫vida antes disso, pode me chamar aqui!\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
            }
          ]
        },
        "options": {}
      },
      "id": "30",
      "name": "Mensagem Final Cliente",
      "type": "n8n-nodes-base.httpRequest",
      "position": [5050, 300],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "amount": 90,
        "unit": "seconds"
      },
      "id": "31",
      "name": "Timer 90 Segundos",
      "type": "n8n-nodes-base.wait",
      "position": [2450, 700],
      "typeVersion": 1,
      "webhookId": "timer-5min"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json.telefone_limpo}}"
            },
            {
              "name": "message",
              "value": "{{$json.nome}}, foi √≥timo conversar com voc√™! üíô\n\nConsegui todas as informa√ß√µes necess√°rias e j√° identifiquei op√ß√µes interessantes pro seu perfil.\n\nSeu consultor especializado entrar√° em contato nas pr√≥ximas horas com uma proposta personalizada.\n\n‚úÖ Ele tem autoriza√ß√£o para aplicar condi√ß√µes especiais!\n\nQualquer d√∫vida antes disso, pode me chamar aqui!\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
            }
          ]
        },
        "options": {}
      },
      "id": "32",
      "name": "Reengajamento 5min",
      "type": "n8n-nodes-base.httpRequest",
      "position": [2650, 700],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 10,
              "minutesInterval": 0
            }
          ]
        }
      },
      "id": "33",
      "name": "Schedule 10h Dia Seguinte",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [250, 900],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "getMany",
        "sheetId": "{{$env.SHEET_ID_BRUTOS}}",
        "sheetName": "Leads_Brutos",
        "filters": {
          "conditions": [
            {
              "column": "Status",
              "value": "Novo - Aguardando IA"
            }
          ]
        },
        "options": {}
      },
      "id": "34",
      "name": "Buscar Leads Pendentes",
      "type": "n8n-nodes-base.googleSheets",
      "position": [450, 900],
      "typeVersion": 4
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "35",
      "name": "Loop Leads",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [650, 900],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{'55' + $json['Telefone com DDD'].replace(/[^0-9]/g, '')}}"
            },
            {
              "name": "message",
              "value": "Bom dia, {{$json['Nome Completo']}}! ‚òÄÔ∏è\n\nOntem come√ßamos a conversar sobre o plano de sa√∫de Bradesco para {{$json['N√∫mero de Vidas']}} {{$json['N√∫mero de Vidas'] > 1 ? 'pessoas' : 'pessoa'}}.\n\nSeparei 3 op√ß√µes incr√≠veis baseadas no seu perfil!\n\nPosso te mostrar? Leva s√≥ 2 minutinhos... ‚è∞\n\nSe preferir, me diga o melhor hor√°rio para conversarmos.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
            }
          ]
        },
        "options": {}
      },
      "id": "36",
      "name": "Mensagem Dia Seguinte",
      "type": "n8n-nodes-base.httpRequest",
      "position": [850, 900],
      "typeVersion":  4.1
    },
{
      "parameters": {
        "amount": 30,
        "unit": "seconds"
      },
      "id": "37",
      "name": "Intervalo Entre Mensagens",
      "type": "n8n-nodes-base.wait",
      "position": [1050, 900],
      "typeVersion":         1
    },
    {
      "parameters": {
        "functionCode": "const SD = this.getWorkflowStaticData('global');\nconst destinos = [\n  { phone: '5511996163900', email: 'vendedor1@empresa.com', agendor: 'user1' },\n  { phone: '5511996222200', email: 'vendedor2@empresa.com', agendor: 'user2' },\n  { phone: '5511996333300', email: 'vendedor3@empresa.com', agendor: 'user3' }\n  // ...adicione mais vendedores aqui...\n];\nconst idx = (SD.rotativo || 0) % destinos.length;\nSD.rotativo = idx + 1;\nreturn items.map(item => ({ json: { ...item.json, destino_phone: destinos[idx].phone, destino_email: destinos[idx].email, destino_agendor: destinos[idx].agendor } }));"
     
      },
      "id": "38",
      "name": "Selecionar Destinos",
      "type": "n8n-nodes-base.code",
      "position": [4250, 700],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.classificacao_atual}}",
              "operation": "equal",
              "value2": "PORTABILIDADE"
            }
          ]
        }
      },
      "id": "39",
      "name": "√â Portabilidade?",
      "type": "n8n-nodes-base.if",
      "position": [1850, 400],
      "typeVersion": 1
    },
    {
      "parameters": {
        "functionCode": "const resposta = JSON.parse($json.choices[0].message.content);\nreturn {\n  ...$json,\n  mensagem_continuar: resposta.mensagem_cliente\n};"
      },
      "id": "40",
      "name": "Processar Continuar",
      "type": "n8n-nodes-base.code",
      "position": [4250, 600],
      "typeVersion": 2
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            { "name": "phone", "value": "={{'55' + $json.telefone_limpo}}" },
            { "name": "message", "value": "={{$json.mensagem_continuar}}" }
          ]
        }
      },
      "id": "41",
      "name": "Enviar Continua√ß√£o",
      "type": "n8n-nodes-base.httpRequest",
      "position": [4450, 600],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/{{$env.ZAPI_INSTANCE}}/token/{{$env.ZAPI_TOKEN}}/send-text",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            { "name": "phone", "value": "={{'55' + $json.telefone_limpo}}" },
            { "name": "message", "value": "={{$json.mensagem_mariana}}" }
          ]
        }
      },
      "id": "14",
      "name": "WhatsApp Enviar Mariana",
      "type": "n8n-nodes-base.httpRequest",
      "position": [2250, 300],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "url": "={{$json.webhook_completo.message.audio.url}}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "id": "42",
      "name": "Baixar √Åudio",
      "type": "n8n-nodes-base.httpRequest",
      "position": [3150, 700],
      "typeVersion": 4.1
    },
    {
      "parameters": {
        "functionCode": "// Recarrega prompt para continua√ß√£o\nconst promptSistema = `Voc√™ √© a Mariana, consultora da Bradesco Sa√∫de com 10 anos de experi√™ncia.\n\nCOMPORTAMENTO:\n- Profissional, cordial, humanizada, calorosa e emp√°tica.\n- Sempre pare√ßa humana: reconhe√ßa o que o cliente diz, agrade√ßa, adapte o tom conforme o perfil, nunca seja rob√≥tica.\n- Use emojis com modera√ß√£o (üòä ‚úÖ üìå üíô).\n- Adapte a sauda√ß√£o conforme hor√°rio (bom dia/tarde/noite).\n- Trate m√©dicos como \"Dr(a).\".\n- Assine sempre: ‚Äî Mariana ¬∑ Bradesco Sa√∫de.\n- Se o cliente demonstrar inseguran√ßa, reforce acolhimento e seguran√ßa.\n- Se o cliente pedir agilidade, seja objetiva e r√°pida.\n- Se o cliente for idoso, seja ainda mais respeitosa e clara.\n- Se o cliente pedir para falar com humano, encaminhe imediatamente e avise.\n\nPLANOS BRADESCO:\n- Efetivo: B√°sico, rede essencial\n- Flex: Intermedi√°rio, rede ampliada\n- Ideal: Digital, rede completa\n- Nacional: Cobertura Brasil todo\n- Nacional Plus: Premium com Einstein/S√≠rio\n- Premium: Top com Copa Star/Samaritano\n\nREDE HOSPITALAR S√ÉO PAULO:\n- Efetivo: Benefic√™ncia Portuguesa\n- Flex: + Santa Paula, S√£o Camilo\n- Ideal: + 9 de Julho, Santa Joana\n- Nacional: + Oswaldo Cruz, Santa Catarina\n- Nacional Plus: + Einstein, S√≠rio-Liban√™s\n- Premium: + Copa Star, Samaritano, Vila Nova Star\n\nHOSPITAIS RIO DE JANEIRO:\n- Copa D'Or, Quinta D'Or (Nacional Plus/Premium)\n- Samaritano, Barra D'Or (Nacional/Ideal)\n- Casa de Sa√∫de S√£o Jos√© (Flex)\n\nCAR√äNCIAS:\n- Urg√™ncia/Emerg√™ncia: 24 horas\n- Consultas: 30 dias\n- Exames simples: 30 dias\n- Exames complexos: 180 dias\n- Interna√ß√µes: 180 dias\n- Parto: 300 dias\n- Doen√ßas preexistentes: 24 meses\n\nREGRAS PRINCIPAIS:\n- M√≠nimo 3 vidas\n- CNPJ/MEI ativo 6+ meses\n- Idade limite 59 anos (acima an√°lise especial)\n- RN at√© 30 dias sem car√™ncia\n\nCONHECIMENTO BRADESCO SA√öDE:\n- Planos: Efetivo (b√°sico, rede essencial), Flex (intermedi√°rio, rede ampliada), Ideal (digital, rede completa), Nacional (Brasil todo), Nacional Plus (premium Einstein/S√≠rio), Premium (top Copa Star/Samaritano).\n- Rede hospitalar SP: Efetivo (Benefic√™ncia Portuguesa), Flex (+Santa Paula, S√£o Camilo), Ideal (+9 de Julho, Santa Joana), Nacional (+Oswaldo Cruz, Santa Catarina), Nacional Plus (+Einstein, S√≠rio), Premium (+Copa Star, Samaritano, Vila Nova Star).\n- Rede hospitalar RJ: Copa D'Or, Quinta D'Or (Nacional Plus/Premium), Samaritano, Barra D'Or (Nacional/Ideal), Casa de Sa√∫de S√£o Jos√© (Flex).\n- Car√™ncias: urg√™ncia/emerg√™ncia 24h, consultas 30 dias, exames simples 30 dias, exames complexos 180 dias, interna√ß√µes 180 dias, parto 300 dias, doen√ßas preexistentes 24 meses.\n- Regras: m√≠nimo 3 vidas, CNPJ/MEI ativo h√° 6+ meses, inclus√£o RN at√© 30 dias sem car√™ncia, inclus√£o c√¥njuge at√© 30 dias do casamento, idade limite 59 anos (acima requer an√°lise especial).\n\nREGRAS DE QUALIFICA√á√ÉO:\n1. PORTABILIDADE: Se cliente mencionar \"portabilidade\", \"migra√ß√£o\", \"trocar plano\", \"mudar de plano\", \"aproveitar car√™ncias\", \"transferir plano\"\n   ‚Üí status = \"PORTABILIDADE\"\n   ‚Üí mensagem_cliente = \"Ol√°! üòä Sobre PORTABILIDADE: Voc√™ pode pedir a portabilidade sem novas car√™ncias se cumprir as regras da ANS. Fa√ßa a solicita√ß√£o pelo canal oficial da Bradesco Sa√∫de: https://www.bradescoseguros.com.br/clientes/produtos/plano-saude/portabilidade-de-carencias Se quiser, te ajudo a conferir a elegibilidade agora.\"\n   ‚Üí Encaminhe para vendedor ap√≥s resposta.\n\n2. AN√ÅLISE HUMANA: Se idade ‚â•67 anos OU doen√ßa grave (c√¢ncer, di√°lise, transplante, cardiopatia, neurol√≥gico) OU menos de 3 vidas\n   ‚Üí status = \"ANALISE_HUMANA\"\n   ‚Üí mensagem_cliente = \"Obrigado pelas informa√ß√µes! Como seu caso necessita an√°lise especial para garantir a melhor proposta, um consultor especializado entrar√° em contato em at√© 24h √∫teis. Ele poder√° oferecer condi√ß√µes diferenciadas para sua situa√ß√£o.\"\n   ‚Üí Avise o cliente que ser√° atendido por consultor e encaminhe imediatamente ap√≥s coleta dos dados obrigat√≥rios.\n\n3. PRONTO PARA COTA√á√ÉO: Todos os demais casos\n   ‚Üí status = \"PRONTO_PARA_COTACAO\"\n   ‚Üí mensagem_cliente = Pergunte de forma clara e objetiva os dados obrigat√≥rios que faltam para qualificar o lead (m√°ximo 2 perguntas por vez, sempre agrupando o que falta em uma s√≥ mensagem).\n\nPERGUNTAS OBRIGAT√ìRIAS (sempre perguntar s√≥ o que falta, nunca repetir):\n- Idades dos dependentes (Ex: \"Pode informar as idades dos dependentes?\")\n- Tipo de contrata√ß√£o (CNPJ/MEI/CPF) (Ex: \"A contrata√ß√£o ser√° por CNPJ, MEI ou CPF?\")\n- Hospital de prefer√™ncia (Ex: \"Tem algum hospital de prefer√™ncia?\")\n- Plano atual (se n√£o for portabilidade) (Ex: \"Possui algum plano de sa√∫de atualmente?\")\n- Doen√ßas preexistentes (Ex: \"Algu√©m possui alguma doen√ßa preexistente?\")\n- Observa√ß√µes relevantes: gestante, cirurgia marcada, rec√©m-nascido, urg√™ncia, portabilidade, grupo grande\n\nEXEMPLOS DE PERGUNTAS AGRUPADAS:\n- \"Para seguir com a melhor proposta, preciso s√≥ mais essas informa√ß√µes: as idades dos dependentes e se a contrata√ß√£o ser√° por CNPJ, MEI ou CPF. Pode me informar?\"\n- \"Faltam s√≥ mais dois detalhes: tem algum hospital de prefer√™ncia? Algu√©m possui alguma doen√ßa preexistente?\"\n- \"Voc√™ j√° possui algum plano de sa√∫de atualmente? E tem algum rec√©m-nascido ou gestante na fam√≠lia?\"\n\nINSTRU√á√ïES CR√çTICAS:\n- Leia SEMPRE a mensagem completa antes de perguntar algo.\n- NUNCA repita informa√ß√µes j√° fornecidas.\n- NUNCA mencione valores (diga \"vendedor informar√° valores promocionais\").\n- M√°ximo 2 perguntas por vez, sempre agrupadas em uma so mensagem.\n- Sempre cordial e profissional.\n- S√≥ consulte portabilidade pelo canal oficial Bradesco Sa√∫de.\n\nFUNIL DE VENDAS:\n- Analise as respostas do cliente e classifique conforme regras acima.\n- Sempre colete todas as perguntas obrigat√≥rias antes de encaminhar para vendedor.\n- Quando classificar como \"ANALISE_HUMANA\", avise o cliente que ser√° atendido por consultor e encaminhe imediatamente.\n- Quando todos os dados obrigat√≥rios forem coletados, agrade√ßa e informe que o consultor especializado entrar√° em contato com uma proposta personalizada.\n- Se o cliente for PORTABILIDADE, envie a mensagem padr√£o e encaminhe para vendedor.\n- Se o cliente for PRONTO_PARA_COTACAO, colete os dados faltantes e s√≥ encaminhe ap√≥s completar.\n- Sempre registre observa√ß√µes relevantes (gestante, cirurgia marcada, rec√©m-nascido, portabilidade, urg√™ncia, grupo grande).\n\nRESUMO PARA VENDEDOR:\n- Nome completo\n- Telefone\n- E-mail\n- Cidade/Estado\n- Idade titular\n- N√∫mero de vidas\n- Idades dos dependentes\n- Tipo de contrata√ß√£o (CNPJ/MEI/CPF)\n- Hospital de prefer√™ncia\n- Plano atual\n- Doen√ßas preexistentes (grave/control√°vel)\n- Observa√ß√µes relevantes (gestante, cirurgia marcada, rec√©m-nascido, portabilidade, urg√™ncia, grupo grande)\n- Classifica√ß√£o (QUENTE/MORNO/FRIO/PORTABILIDADE/ANALISE_HUMANA)\n- Score de qualifica√ß√£o\n- Plano sugerido\n- Documentos necess√°rios\n\nDOCUMENTOS NECESS√ÅRIOS:\n- RG, CPF, comprovante de resid√™ncia\n- Cart√£o CNPJ, contrato social, √∫ltima altera√ß√£o (se empresa)\n- Relat√≥rios m√©dicos, receitas atuais (se preexist√™ncia)\n- Carteirinha plano atual, 3 √∫ltimos boletos pagos (se portabilidade)\n- Cart√£o pr√©-natal (se gestante)\n\nFORMATO DE RESPOSTA OBRIGAT√ìRIO (retorne apenas este JSON, sem markdown):\n{\n  \"status\": \"PORTABILIDADE ou ANALISE_HUMANA ou PRONTO_PARA_COTACAO\",\n  \"mensagem_cliente\": \"mensagem apropriada para WhatsApp, agrupando perguntas obrigat√≥rias que faltam em uma s√≥ mensagem\",\n  \"mensagem_vendedor\": \"Novo lead: nome, telefone, cidade/estado, X vidas, idades dependentes, tipo contrata√ß√£o, hospital prefer√™ncia, plano atual, doen√ßas, observa√ß√µes relevantes, classifica√ß√£o, score, plano sugerido, documentos necess√°rios\",\n  \"idades_dependentes\": \"Jo√£o 35; Maria 32; Ana 8 ou vazio se n√£o informado\"\n}`;\n\nconst contexto = {\n  dados_ja_coletados: {\n    nome: $json.nome,\n    idade_titular: $json.idade_titular,\n    telefone: $json.telefone,\n    email: $json.email,\n    cidade: $json.cidade,\n    estado: $json.estado,\n    total_vidas: $json.vidas,\n    mensagem_original: $json.mensagem\n  },\n  dados_extraidos_mensagem: $json.dados_extraidos_mensagem,\n  dados_faltantes: $json.dados_faltantes,\n  classificacao_inicial: $json.classificacao_inicial,\n  score: $json.score_inicial\n};\n\n// Monta informa√ß√£o sobre o que j√° foi coletado\nlet infoColetada = 'INFORMA√á√ïES J√Å FORNECIDAS (N√ÉO PERGUNTAR):\\n';\ninfoColetada += `- Nome: ${contexto.dados_ja_coletados.nome}\\n`;\ninfoColetada += `- Idade titular: ${contexto.dados_ja_coletados.idade_titular} anos\\n`;\ninfoColetada += `- Total vidas: ${contexto.dados_ja_coletados.total_vidas}\\n`;\ninfoColetada += `- Local: ${contexto.dados_ja_coletados.cidade}/${contexto.dados_ja_coletados.estado}\\n`;\n\nif (contexto.dados_extraidos_mensagem.idades_informadas?.length > 0) {\n  infoColetada += `- Idades informadas: ${contexto.dados_extraidos_mensagem.idades_informadas.join(', ')} anos\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cnpj) {\n  infoColetada += `- Tipo documento: CNPJ/MEI\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cpf) {\n  infoColetada += `- Tipo documento: CPF\\n`;\n}\nif (contexto.dados_extraidos_mensagem.hospital_mencionado) {\n  infoColetada += `- Hospital preferido: ${contexto.dados_extraidos_mensagem.hospital_mencionado}\\n`;\n}\nif (contexto.dados_extraidos_mensagem.plano_atual) {\n  infoColetada += `- Plano atual: ${contexto.dados_extraidos_mensagem.plano_atual}\\n`;\n}\n\nreturn {\n  ...$json,\n  prompt_sistema: promptSistema,\n  contexto_conversa: JSON.stringify(contexto),\n  info_ja_coletada: infoColetada\n};"
    },
    {
      "parameters": {
        "functionCode": "// Processa resposta da OpenAI (robusto p/ JSON)\nlet resposta = {};\ntry {\n  resposta = JSON.parse($json.choices[0].message.content);\n} catch (e) {\n  const raw = $json.choices[0].message.content || \"\";\n  const first = raw.indexOf(\"{\");\n  const last = raw.lastIndexOf(\"}\");\n  if (first >= 0 && last > first) {\n    try { resposta = JSON.parse(raw.slice(first, last + 1)); } catch(e2) {}\n  }\n}\nif (!resposta || typeof resposta !== \"object\" || !resposta.mensagem_cliente) {\n  resposta = {\n    mensagem_cliente: \"Desculpe, tive um problema ao interpretar. Vou encaminhar um consultor para te ajudar rapidinho, tudo bem?\",\n    classificacao: \"ANALISE_HUMANA\",\n    score: 0,\n    perguntas_feitas: [],\n    precisa_analise_humana: true,\n    motivo_analise: \"Falha de parsing\"\n  };\n}\n\n// Tempo de digita√ß√£o humano (3‚Äì6s)\nconst palavras = String(resposta.mensagem_cliente || \"\").split(/\\s+/).filter(Boolean).length;\nconst base = Math.max(1200, Math.min(6000, palavras * 120)); // 120ms/palavra\nconst jitter = Math.floor(Math.random() * 600);              // 0‚Äì600ms extra\nconst tempoDigitacao = Math.min(base + jitter, 6000);\n\nreturn {\n  ...$json,\n  mensagem_mariana: resposta.mensagem_cliente,\n  classificacao_atual: resposta.classificacao,\n  score_atual: resposta.score,\n  perguntas_feitas: resposta.perguntas_feitas,\n  precisa_humano: resposta.precisa_analise_humana,\n  motivo_analise: resposta.motivo_analise || \"\",\n  tempo_digitacao: tempoDigitacao\n};"
      },
      "id": "10",
      "name": "Processar Resposta OpenAI",
      "type": "n8n-nodes-base.code",
      "position": [1650, 300],
      "typeVersion": 2
    },
    {
      "parameters": {
        "amount": "={{Math.ceil($json.tempo_digitacao / 1000)}}",
        "unit": "seconds"
      },
      "id": "11",
      "name": "Simular Tempo Digita√ß√£o",
      "type": "n8n-nodes-base.wait",
      "position": [1850, 300],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Recebe Formul√°rio Landing": {
      "main": [[{"node": "Processar Dados Iniciais", "type": "main", "index": 0}]]
    },
    "Processar Dados Iniciais": {
      "main": [[
        {"node": "Salvar Google Sheets Brutos", "type": "main", "index": 0},
        {"node": "Email Controle Interno", "type": "main", "index": 0}
      ]]
    },
    "Salvar Google Sheets Brutos": {
      "main": [[{"node": "WhatsApp Resposta Inicial", "type": "main", "index": 0}]]
    },
    "WhatsApp Resposta Inicial": {
      "main": [[{"node": "Aguardar Resposta ou 50seg", "type": "main", "index": 0}]]
    },
    "Aguardar Resposta ou 50seg": {
      "main": [
        [{ "node": "Status Digitando ON", "type": "main", "index": 0 }]
      ]
    },
    "Status Digitando ON": {
      "main": [[{"node": "Preparar Prompt Mariana", "type": "main", "index": 0}]]
    },
    "Status Digitando OFF": {
      "main": [[{"node": "WhatsApp Enviar Mariana", "type": "main", "index": 0}]]
    },
    "Preparar Prompt Mariana": {
      "main": [[{"node": "OpenAI Primeira Qualifica√ß√£o", "type": "main", "index": 0}]]
    },
    "OpenAI Primeira Qualifica√ß√£o": {
      "main": [[{"node": "Processar Resposta OpenAI", "type": "main", "index": 0}]]
    },
    "Processar Resposta OpenAI": {
      "main": [[{"node": "√â Portabilidade?", "type": "main", "index": 0}]]
    },
    "√â Portabilidade?": {
      "main": [
        [{"node": "Enviar Link Portabilidade", "type": "main", "index": 0}],
        [{"node": "Simular Tempo Digita√ß√£o", "type": "main", "index": 0}]
      ]
    },
    "Simular Tempo Digita√ß√£o": {
      "main": [[{"node": "Status Digitando OFF", "type": "main", "index": 0}]]
    },
    "Webhook Resposta Cliente WhatsApp": {
      "main": [[{ "node": "Processar Resposta Cliente", "type": "main", "index": 0 }]]
    },
    "Processar Resposta Cliente": {
      "main": [[{"node": "√â √Åudio?", "type": "main", "index": 0}]]
    },
    "√â √Åudio?": {
      "main": [
        [
          {"node": "Confirmar √Åudio Recebido", "type": "main", "index": 0},
          {"node": "Baixar √Åudio", "type": "main", "index": 0}
        ],
        [{ "node": "Merge Respostas", "type": "main", "index": 0 }]
      ]
    },
    "Baixar √Åudio": {
      "main": [
        [{"node": "Transcrever √Åudio OpenAI", "type": "main", "index": 0}]
      ]
    },
    "Transcrever √Åudio OpenAI": {
      "main": [[{"node": "Merge Respostas", "type": "main", "index": 0}]]
    },
    "Merge Respostas": {
      "main": [[{"node": "Atualizar Contexto Conversa", "type": "main", "index": 0}]]
    },
    "Atualizar Contexto Conversa": {
      "main": [[{"node": "Dados Completos?", "type": "main", "index": 0}]]
    },
    "Dados Completos?": {
      "main": [
    [{"node": "Preparar Resumo Vendedor Completo", "type": "main", "index": 0}]
  ]
    },
    "Preparar Resumo Vendedor Completo": {
      "main": [
        {"node": "Selecionar Destinos", "type": "main", "index": 0}
      ]
    },
    "Selecionar Destinos": {
      "main": [
        [{ "node": "Salvar Leads Qualificados", "type": "main", "index": 0 }],
        [{ "node": "Email Vendedor Rico Formatado", "type": "main", "index": 0 }],
        [{ "node": "WhatsApp Vendedor", "type": "main", "index": 0 }],
        [{ "node": "Criar Deal Agendor", "type": "main", "index": 0 }]
      ]
    },
    "Criar Deal Agendor": {
      "main": [[{"node": "Mensagem Final Cliente", "type": "main", "index": 0}]]
    },
    "Timer 90 Segundos": {
      "main": [[{"node": "Reengajamento 5min", "type": "main", "index": 0}]]
    },
    "Schedule 10h Dia Seguinte": {
      "main": [[{ "node": "Buscar Leads Pendentes", "type": "main", "index": 0 }]]
    },
    "Buscar Leads Pendentes": {
      "main": [[{ "node": "Loop Leads", "type": "main", "index": 0 }]]
    },
    "Loop Leads": {
      "main": [[{ "node": "Mensagem Dia Seguinte", "type": "main", "index": 0 }]]
    },
    "Mensagem Dia Seguinte": {
      "main": [[{ "node": "Intervalo Entre Mensagens", "type": "main", "index": 0 }]]
    },
    "Intervalo Entre Mensagens": {
      "main": [[]]
    }
  }
}
