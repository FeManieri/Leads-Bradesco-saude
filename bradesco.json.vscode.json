{
   "name":"Bradesco_Qualificacao_Inteligente",
   "nodes":[
      {
         "parameters":{
            "functionCode":"// Processar resposta da OpenAI - Parse Resiliente\nlet r={}; \ntry { r = JSON.parse($json.choices[0]?.message?.content ?? '{}'); } catch(e){ r={}; }\nreturn {\n  ...$json,\n  mensagem_mariana_loop: r.mensagem_cliente ?? $json.mensagem_mariana_loop,\n  classificacao: r.classificacao_final ?? $json.classificacao,\n  score: (r.score_final ?? $json.score),\n  qualificacao_completa: r.qualificacao_completa === true\n};"
         },
         "id":"62",
         "name":"Processar Resposta OpenAI (loop)",
         "type":"n8n-nodes-base.code",
         "typeVersion":2,
         "position":[
            4250,
            720
         ]
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.qualificacao_completa}}",
                     "value2":true
                  }
               ],
               "number":[
                  {
                     "value1":"={{$json.total_interacoes || 0}}",
                     "operation":"largerEqual",
                     "value2":8
                  }
               ]
            },
            "combineOperation":"any"
         },
         "id":"97",
         "name":"Condi√ß√£o de Parada Loop",
         "type":"n8n-nodes-base.if",
         "typeVersion":2,
         "position":[
            4350,
            720
         ]
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"={{$json.mensagem_mariana_loop}}"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"63",
         "name":"WhatsApp Enviar Mariana (continua√ß√£o)",
         "type":"n8n-nodes-base.httpRequest",
         "typeVersion":4.1,
         "position":[
            4450,
            720
         ]
      },
      {
         "parameters":{
            "path":"bradesco-landing",
            "responseMode":"responseNode",
            "options":{
               
            }
         },
         "id":"1",
         "name":"Recebe Formul√°rio Landing",
         "type":"n8n-nodes-base.webhook",
         "position":[
            250,
            300
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "functionCode":"// AN√ÅLISE COMPLETA DO CAMPO MENSAGEM OPCIONAL\nfunction analisarMensagemOpcional(mensagem) {\n if (!mensagem) return { dados_faltantes: ['idades_dependentes', 'tipo_documento', 'hospital_preferencia', 'plano_atual'] };\n \n function removerAcentos(str) {\n return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n }\n const msg = removerAcentos(mensagem.toLowerCase());\n const dadosExtraidos = {\n idades_informadas: [],\n tem_cnpj: false,\n tem_mei: false,\n tem_cpf: false,\n hospital_mencionado: null,\n plano_atual: null,\n doencas_mencionadas: [],\n dados_faltantes: []\n };\n\n // EXTRA√á√ÉO DE IDADES\n const padraoIdades = [\n /(\\w+)\\s+(?:de\\s+)?(\\d{1,2})\\s*(?:anos?)?/gi,\n /(\\d{1,2})\\s*(?:anos?)?\\s+(\\w+)/gi,\n /(\\d{1,2})\\s*(?:anos?)?/gi\n ];\n \n padraoIdades.forEach(padrao => {\n let match;\n while ((match = padrao.exec(mensagem)) !== null) {\n let idade = match[0].match(/\\d+/)?.[0];\n if (idade && parseInt(idade) < 120) {\n dadosExtraidos.idades_informadas.push(parseInt(idade));\n }\n }\n });\n\n // EXTRA√á√ÉO CNPJ/MEI/CPF\n if (/cnpj|empresa|mei|ltda/.test(msg)) {\n dadosExtraidos.tem_cnpj = true;\n } else if (/cpf|pessoa.?f[√≠i]sica/.test(msg)) {\n dadosExtraidos.tem_cpf = true;\n }\n\n // EXTRA√á√ÉO HOSPITAIS\n const hospitais = ['einstein', 'sirio', 'oswaldo', 'beneficencia', 'samaritano', 'santa catarina', 'sao camilo', '9 de julho', 'copa star'];\n hospitais.forEach(h => {\n if (msg.includes(h)) {\n dadosExtraidos.hospital_mencionado = h;\n }\n });\n\n // EXTRA√á√ÉO PLANO ATUAL\n const planos = ['amil', 'sulamerica', 'unimed', 'notredame', 'hapvida', 'prevent'];\n planos.forEach(p => {\n if (msg.includes(p)) {\n dadosExtraidos.plano_atual = p;\n }\n });\n\n // EXTRA√á√ÉO DOEN√áAS - CORRIGIDO SEM ACENTO\n if (/cancer|dialise|transplante/.test(msg)) {\n dadosExtraidos.doenca_grave = true;\n }\n if (/diabetes|pressao|hipertens/.test(msg)) {\n dadosExtraidos.doenca_controlavel = true;\n }\n\n // PORTABILIDADE\n if (/portabilidade|migrar|trocar\\s*plano|mudar\\s*plano|transferir|aproveitar\\s*car[√™e]ncia/.test(msg)) {\n dadosExtraidos.quer_portabilidade = true;\n }\n\n // Define o que falta\n if (dadosExtraidos.idades_informadas.length === 0) {\n dadosExtraidos.dados_faltantes.push('idades_dependentes');\n }\n if (!dadosExtraidos.tem_cnpj && !dadosExtraidos.tem_cpf) {\n dadosExtraidos.dados_faltantes.push('tipo_documento');\n }\n if (!dadosExtraidos.hospital_mencionado) {\n dadosExtraidos.dados_faltantes.push('hospital_preferencia');\n }\n if (!dadosExtraidos.plano_atual && !dadosExtraidos.quer_portabilidade) {\n dadosExtraidos.dados_faltantes.push('plano_atual');\n }\n\n return dadosExtraidos;\n}\n\n// PREPARA√á√ÉO INICIAL DOS DADOS\nconst dados = $input.item.json;\n\n// VALIDA√á√ÉO DE CAMPOS OBRIGAT√ìRIOS\nif (!dados.nome || !dados.telefone) {\n throw new Error('Campos obrigat√≥rios faltando: nome e telefone');\n}\n\n// Analisa campo mensagem ANTES de qualquer coisa\nconst analise_mensagem = analisarMensagemOpcional(dados.mensagem || '');\n\n// Limpa telefone e valida\nconst telefone = (dados.telefone || '').replace(/[^0-9]/g, '');\nconst telefoneWhats = telefone.length === 11 ? telefone : '11' + telefone;\n\n// VALIDA√á√ÉO DE TELEFONE\nlet telefone_invalido = false;\nif (!telefone || telefone.length < 10 || telefone.length > 11) {\n telefone_invalido = true;\n}\n\n// Calcula idade\nlet idade = null;\nif (dados.nascimento) {\n const nascimento = new Date(dados.nascimento);\n if (!isNaN(nascimento.getTime())) {\n const hoje = new Date();\n idade = hoje.getFullYear() - nascimento.getFullYear();\n const mes = hoje.getMonth() - nascimento.getMonth();\n if (mes < 0 || (mes === 0 && hoje.getDate() < nascimento.getDate())) {\n idade--;\n }\n }\n}\n\n// Classifica√ß√£o inicial considerando TUDO\nlet classificacao = 'ANALISAR';\nlet score = 50;\n\n// NOVA L√ìGICA: todos seguem para coleta, s√≥ muda classifica√ß√£o\nif (analise_mensagem.quer_portabilidade) {\n classificacao = 'PORTABILIDADE';\n score = 80;\n} else if (analise_mensagem.doenca_grave || idade >= 67) {\n classificacao = 'FRIO';\n score = 20;\n} else if (dados.vidas < 3) {\n classificacao = 'MORNO';\n score = 40;\n} else {\n classificacao = 'QUENTE';\n score = 70;\n}\n\n// Monta objeto final com TUDO\nreturn {\n ...dados,\n lead_id: `BD_${Date.now()}_${telefone.slice(-4)}`,\n telefone_limpo: telefoneWhats,\n telefone_whatsapp: `55${telefoneWhats}@s.whatsapp.net`,\n telefone_invalido: telefone_invalido,\n idade_titular: idade,\n classificacao_inicial: classificacao,\n score_inicial: score,\n dados_extraidos_mensagem: analise_mensagem,\n dados_faltantes: analise_mensagem.dados_faltantes,\n timestamp: new Date().toISOString(),\n horario: new Date().getHours() < 12 ? 'Bom dia' : new Date().getHours() < 18 ? 'Boa tarde' : 'Boa noite'\n};"
         },
         "id":"2",
         "name":"Processar Dados Iniciais",
         "type":"n8n-nodes-base.code",
         "position":[
            450,
            300
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "operation":"append",
            "sheetId":"{{$env.SHEET_ID_BRUTOS}}",
            "sheetName":"Leads_Brutos",
            "columns":{
               "mappingMode":"defineBelow",
               "value":{
                  "Nome Completo":"={{$json.nome}}",
                  "Telefone com DDD":"={{$json.telefone}}",
                  "E-mail":"={{$json.email}}",
                  "Data de Nascimento":"={{$json.nascimento}}",
                  "Estado":"={{$json.estado}}",
                  "Cidade":"={{$json.cidade}}",
                  "N√∫mero de Vidas":"={{$json.vidas}}",
                  "Mensagem":"={{$json.mensagem}}",
                  "Lead_ID":"={{$json.lead_id}}",
                  "Idade_Calculada":"={{$json.idade_titular}}",
                  "Status":"Novo - Aguardando IA"
               }
            },
            "options":{
               
            }
         },
         "id":"3",
         "name":"Salvar Google Sheets Brutos",
         "type":"n8n-nodes-base.googleSheets",
         "position":[
            650,
            200
         ],
         "typeVersion":4
      },
      {
         "parameters":{
            "sendTo":"{{$env.VENDOR_DEFAULT_EMAIL}}",
            "subject":"üîî Novo Lead #{{$json.lead_id}} - {{$json.nome}}",
            "emailType":"html",
            "message":"<h2>Novo Lead Recebido - ABMix Corretora</h2>\n<table border='1' style='border-collapse:collapse'>\n<tr><td><b>ID:</b></td><td>{{$json.lead_id}}</td></tr>\n<tr><td><b>Nome:</b></td><td>{{$json.nome}}</td></tr>\n<tr><td><b>Telefone:</b></td><td>{{$json.telefone}}</td></tr>\n<tr><td><b>Email:</b></td><td>{{$json.email}}</td></tr>\n<tr><td><b>Idade:</b></td><td>{{$json.idade_titular}} anos</td></tr>\n<tr><td><b>Local:</b></td><td>{{$json.cidade}}/{{$json.estado}}</td></tr>\n<tr><td><b>Vidas:</b></td><td>{{$json.vidas}}</td></tr>\n<tr><td><b>Mensagem:</b></td><td>{{$json.mensagem}}</td></tr>\n<tr><td><b>Classifica√ß√£o:</b></td><td>{{$json.classificacao_inicial}}</td></tr>\n</table>\n<p><i>Atendimento autom√°tico iniciado via WhatsApp</i></p>",
            "options":{
               
            }
         },
         "id":"4",
         "name":"Email Controle Interno",
         "type":"n8n-nodes-base.gmail",
         "position":[
            650,
            400
         ],
         "typeVersion":2.1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"Ol√° Dr(a). {{$json.nome}}!\n\nSou a Mariana, consultora especialista Bradesco Sa√∫de.\n\nRecebi sua solicita√ß√£o! üòä\n\nVou fazer algumas perguntinhas r√°pidas para conseguir as melhores op√ß√µes.\n\nEnquanto isso, se tiver alguma d√∫vida espec√≠fica, fique √† vontade para perguntar.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"5",
         "name":"WhatsApp Resposta Inicial",
         "type":"n8n-nodes-base.httpRequest",
         "typeVersion":4.1,
         "position":[
            850,
            300
         ]
      },
      {
         "parameters":{
            "amount":50,
            "unit":"seconds"
         },
         "id":"6",
         "name":"Aguardar Resposta ou 50seg",
         "type":"n8n-nodes-base.wait",
         "position":[
            1050,
            300
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/chat/typing/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"state",
                     "value":"on"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"7",
         "name":"Status Digitando ON",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            1250,
            200
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "functionCode":"// PROMPT COM COLETA R√ÅPIDA (2‚Äì3 itens por turno), humano e sem repeti√ß√£o do que j√° veio do formul√°rio\n\nconst promptSistema = `Voc√™ √© a Mariana, consultora da Bradesco Sa√∫de com 10 anos de experi√™ncia em planos de sa√∫de corporativos e individuais.\n\nCOMPORTAMENTO E PERSONALIDADE:\n- Profissional, cordial, humanizada, calorosa e emp√°tica.\n- Sempre pare√ßa humana: reconhe√ßa o que o cliente diz, agrade√ßa, adapte o tom conforme o perfil, nunca seja rob√≥tica.\n- Use emojis com modera√ß√£o (üòä ‚úÖ üìå üíô üè• üíä).\n- Adapte a sauda√ß√£o conforme hor√°rio (bom dia/tarde/noite).\n- Trate m√©dicos como \"Dr(a).\" e seja respeitosa com profissionais da sa√∫de.\n- Assine sempre: ‚Äî Mariana ¬∑ Bradesco Sa√∫de.\n- Se o cliente demonstrar inseguran√ßa, reforce acolhimento e seguran√ßa.\n- Se o cliente pedir agilidade, seja objetiva e r√°pida.\n- Se o cliente for idoso, seja ainda mais respeitosa e clara.\n- Se o cliente pedir para falar com humano, encaminhe imediatamente e avise.\n- Seja proativa em explicar benef√≠cios e diferenciais.\n- Sempre ofere√ßa alternativas quando poss√≠vel.\n\nPLANOS BRADESCO SA√öDE - DETALHAMENTO COMPLETO:\n\nüè• EFETIVO (B√°sico - Rede Essencial):\n- Rede: Benefic√™ncia Portuguesa, Hospital S√£o Paulo, Hospital das Cl√≠nicas\n- Caracter√≠sticas: Ideal para empresas que buscam economia com qualidade\n- Cobertura: Consultas, exames b√°sicos, urg√™ncia/emerg√™ncia\n- Perfil: Empresas com or√ßamento limitado, funcion√°rios jovens\n\nüè• FLEX (Intermedi√°rio - Rede Ampliada):\n- Rede: + Santa Paula, S√£o Camilo, Hospital 9 de Julho\n- Caracter√≠sticas: Equil√≠brio entre custo e benef√≠cio\n- Cobertura: + Exames de m√©dia complexidade, especialistas\n- Perfil: Empresas m√©dias, funcion√°rios com fam√≠lias\n\nüè• IDEAL (Digital - Rede Completa):\n- Rede: + Hospital Oswaldo Cruz, Santa Catarina, Rede D'Or\n- Caracter√≠sticas: Cobertura ampla com tecnologia digital\n- Cobertura: + Telemedicina, exames complexos, cirurgias\n- Perfil: Empresas modernas, funcion√°rios conectados\n\nüè• NACIONAL (Cobertura Brasil Todo):\n- Rede: + Hospitais em todas as capitais brasileiras\n- Caracter√≠sticas: Ideal para empresas com funcion√°rios em viagem\n- Cobertura: + Atendimento nacional, reembolso\n- Perfil: Empresas nacionais, executivos viajantes\n\nüè• NACIONAL PLUS (Premium com Einstein/S√≠rio):\n- Rede: + Einstein, S√≠rio-Liban√™s, Copa D'Or, Quinta D'Or\n- Caracter√≠sticas: Premium com hospitais de refer√™ncia\n- Cobertura: + Medicina de alta complexidade, transplantes\n- Perfil: Empresas premium, executivos de alto n√≠vel\n\nüè• PREMIUM (Top com Copa Star/Samaritano):\n- Rede: + Copa Star, Samaritano, Vila Nova Star\n- Caracter√≠sticas: M√°xima qualidade e exclusividade\n- Cobertura: + Su√≠tes, chef, medicina personalizada\n- Perfil: Empresas de luxo, CEOs, personalidades\n\nREDE HOSPITALAR DETALHADA POR REGI√ÉO:\n\nüìç S√ÉO PAULO - CAPITAL:\n- Benefic√™ncia Portuguesa: Emerg√™ncia, cardiologia, ortopedia\n- Einstein: Oncologia, neurocirurgia, transplantes\n- S√≠rio-Liban√™s: Cardiologia, oncologia, pediatria\n- Oswaldo Cruz: Emerg√™ncia, UTI, cirurgias\n- Santa Catarina: Maternidade, pediatria, ginecologia\n- 9 de Julho: Ortopedia, traumatologia, reabilita√ß√£o\n- Copa Star: Medicina personalizada, check-ups\n- Samaritano: Cardiologia, neurologia, oncologia\n- Vila Nova Star: Medicina est√©tica, wellness\n\nüìç RIO DE JANEIRO:\n- Copa D'Or: Cardiologia, oncologia, maternidade\n- Quinta D'Or: Ortopedia, traumatologia, reabilita√ß√£o\n- Samaritano: Cardiologia, neurologia\n- Barra D'Or: Emerg√™ncia, UTI, cirurgias\n- Casa de Sa√∫de S√£o Jos√©: Maternidade, pediatria\n\nüìç OUTRAS CAPITAIS:\n- Bras√≠lia: Hospital Bras√≠lia, Hospital S√≠rio-Liban√™s\n- Belo Horizonte: Mater Dei, Hospital das Cl√≠nicas\n- Salvador: Hospital Portugu√™s, Hospital S√£o Rafael\n- Recife: Hospital Portugu√™s, Hospital Esperan√ßa\n- Porto Alegre: Hospital Moinhos de Vento, Hospital S√£o Lucas\n\nCAR√äNCIAS DETALHADAS:\n- Urg√™ncia/Emerg√™ncia: 24 horas (todos os planos)\n- Consultas m√©dicas: 30 dias (todos os planos)\n- Exames simples: 30 dias (sangue, urina, raio-x)\n- Exames complexos: 180 dias (resson√¢ncia, tomografia)\n- Interna√ß√µes: 180 dias (todos os planos)\n- Parto: 300 dias (todos os planos)\n- Doen√ßas preexistentes: 24 meses (todos os planos)\n- Cirurgias eletivas: 180 dias (todos os planos)\n- Transplantes: 24 meses (Nacional Plus/Premium)\n- Medicina est√©tica: 12 meses (Premium)\n\nREGRAS DE CONTRATA√á√ÉO:\n- M√≠nimo 3 vidas (titular + 2 dependentes)\n- CNPJ/MEI ativo h√° pelo menos 6 meses\n- Idade limite: 59 anos (acima disso an√°lise especial)\n- Rec√©m-nascido: at√© 30 dias sem car√™ncia\n- Ades√£o: at√© 30 dias ap√≥s nascimento\n- Documenta√ß√£o: CNPJ, comprovante de renda, documentos pessoais\n\nPROCESSO DE CONTRATA√á√ÉO:\n1. An√°lise de perfil e necessidades\n2. Apresenta√ß√£o de propostas personalizadas\n3. An√°lise de elegibilidade\n4. Emiss√£o de proposta comercial\n5. Assinatura do contrato\n6. Ativa√ß√£o do plano em at√© 48h\n\nDIFERENCIAIS BRADESCO SA√öDE:\n- Rede pr√≥pria de hospitais\n- Telemedicina 24h (planos Ideal+)\n- App Bradesco Sa√∫de com agendamento\n- Programa de preven√ß√£o e wellness\n- Atendimento personalizado\n- Desconto em farm√°cias credenciadas\n- Segunda opini√£o m√©dica\n- Acompanhamento de gestantes\n\nQUALIFICA√á√ÉO DE LEADS:\n- QUENTE: Empresa com 10+ funcion√°rios, or√ßamento definido, urg√™ncia\n- MORNO: Empresa m√©dia, or√ßamento flex√≠vel, sem urg√™ncia\n- FRIO: Empresa pequena, or√ßamento limitado, muitas restri√ß√µes\n- PORTABILIDADE: Cliente quer migrar de outro plano\n- ANALISE_HUMANA: Casos complexos que precisam de an√°lise manual\n\nRETORNE APENAS JSON V√ÅLIDO:\n{\n \"mensagem_cliente\": \"string\",\n \"classificacao_final\": \"QUENTE|MORNO|FRIO|PORTABILIDADE|ANALISE_HUMANA\",\n \"score_final\": 0-100,\n \"qualificacao_completa\": true|false\n}`;\n\nconst contexto = {\n dados_ja_coletados: {\n nome: $json.nome,\n idade_titular: $json.idade_titular,\n cidade: $json.cidade,\n estado: $json.estado,\n total_vidas: $json.vidas,\n mensagem_original: $json.mensagem\n },\n dados_extraidos_mensagem: $json.dados_extraidos_mensagem,\n dados_faltantes: $json.dados_faltantes,\n classificacao_inicial: $json.classificacao_inicial,\n score: $json.score_inicial\n};\n\n// Monta informa√ß√£o sobre o que j√° foi coletado\nlet infoColetada = 'INFORMA√á√ïES J√Å FORNECIDAS (N√ÉO PERGUNTAR):\\n';\ninfoColetada += `- Nome: ${contexto.dados_ja_coletados.nome}\\n`;\ninfoColetada += `- Idade titular: ${contexto.dados_ja_coletados.idade_titular} anos\\n`;\ninfoColetada += `- Total vidas: ${contexto.dados_ja_coletados.total_vidas}\\n`;\ninfoColetada += `- Local: ${contexto.dados_ja_coletados.cidade}/${contexto.dados_ja_coletados.estado}\\n`;\n\nif (contexto.dados_extraidos_mensagem.idades_informadas?.length > 0) {\n infoColetada += `- Idades informadas: ${contexto.dados_extraidos_mensagem.idades_informadas.join(', ')} anos\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cnpj) {\n infoColetada += `- Tipo documento: CNPJ/MEI\\n`;\n}\nif (contexto.dados_extraidos_mensagem.tem_cpf) {\n infoColetada += `- Tipo documento: CPF\\n`;\n}\nif (contexto.dados_extraidos_mensagem.hospital_mencionado) {\n infoColetada += `- Hospital preferido: ${contexto.dados_extraidos_mensagem.hospital_mencionado}\\n`;\n}\nif (contexto.dados_extraidos_mensagem.plano_atual) {\n infoColetada += `- Plano atual: ${contexto.dados_extraidos_mensagem.plano_atual}\\n`;\n}\n\nreturn {\n ...$json,\n prompt_sistema: promptSistema,\n contexto_conversa: JSON.stringify(contexto),\n info_ja_coletada: infoColetada\n};"
         },
         "id":"8",
         "name":"Preparar Prompt Mariana",
         "type":"n8n-nodes-base.code",
         "typeVersion":2,
         "position":[
            1250,
            400
         ]
      },
      {
         "parameters":{
            "resource":"chat",
            "model":"gpt-4o",
            "messages":{
               "values":[
                  {
                     "role":"system",
                     "content":"={{$json.prompt_sistema}}"
                  },
                  {
                     "role":"user",
                     "content":"CONTEXTO:\n{{$json.contexto_conversa}}\n\nINFO_JA_COLETADA (N√ÉO PERGUNTAR NOVAMENTE):\n{{$json.info_ja_coletada}}\n\nRETORNE APENAS JSON V√ÅLIDO:\n{\n \"mensagem_cliente\": \"string\",\n \"classificacao_final\": \"QUENTE|MORNO|FRIO|PORTABILIDADE|ANALISE_HUMANA\",\n \"score_final\": 0-100,\n \"qualificacao_completa\": true|false\n}"
                  }
               ]
            },
            "options":{
               "temperature":0.2,
               "maxTokens":1500,
               "responseFormat":{
                  "type":"json_object"
               }
            }
         },
         "id":"9",
         "name":"OpenAI Primeira Qualifica√ß√£o",
         "type":"@n8n/n8n-nodes-langchain.openAi",
         "position":[
            1450,
            300
         ],
         "typeVersion":1.3
      },
      {
         "parameters":{
            "functionCode":"// Processar resposta da OpenAI - Parse Resiliente\nlet r={}; \ntry { r = JSON.parse($json.choices[0]?.message?.content ?? '{}'); } catch(e){ r={}; }\nreturn {\n  ...$json,\n  mensagem_mariana: r.mensagem_cliente ?? $json.mensagem_mariana,\n  eh_portabilidade: r.classificacao_final === 'PORTABILIDADE',\n  classificacao: r.classificacao_final ?? $json.classificacao,\n  score: (r.score_final ?? $json.score),\n  qualificacao_completa: r.qualificacao_completa === true\n};"
         },
         "id":"10",
         "name":"Processar Resposta OpenAI",
         "type":"n8n-nodes-base.code",
         "position":[
            1650,
            300
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.eh_portabilidade}}",
                     "value2":true
                  }
               ]
            }
         },
         "id":"11",
         "name":"√â Portabilidade?",
         "type":"n8n-nodes-base.if",
         "position":[
            1850,
            300
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/chat/typing/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"state",
                     "value":"off"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"12",
         "name":"Status Digitando OFF",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            2250,
            300
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "amount":3,
            "unit":"seconds"
         },
         "id":"13",
         "name":"Simular Tempo Digita√ß√£o",
         "type":"n8n-nodes-base.wait",
         "position":[
            2050,
            400
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"={{$json.mensagem_mariana}}"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"14",
         "name":"WhatsApp Enviar Mariana",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            2450,
            400
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"Ol√°! üòä Sobre PORTABILIDADE:\n\nVoc√™ pode pedir a portabilidade sem novas car√™ncias se cumprir as regras da ANS.\n\nFa√ßa a solicita√ß√£o pelo canal oficial da Bradesco Sa√∫de:\n{{$env.BRADESCO_PORTABILIDADE_URL}}\n\nSe quiser, te ajudo a conferir a elegibilidade agora.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"15",
         "name":"Enviar Link Portabilidade",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            2450,
            200
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "path":"whatsapp-webhook-evolution",
            "responseMode":"responseNode",
            "options":{
               "responseData":"firstEntryJson",
               "responseHeaders":{
                  "entries":[
                     {
                        "name":"Content-Type",
                        "value":"application/json"
                     }
                  ]
               }
            }
         },
         "id":"16",
         "name":"Webhook Resposta Cliente WhatsApp",
         "type":"n8n-nodes-base.webhook",
         "position":[
            2450,
            500
         ],
         "typeVersion":1,
         "webhookId":"resposta-cliente-whatsapp"
      },
      {
         "parameters":{
            "functionCode":"// Processa resposta do cliente (Evolution / texto ou √°udio)\nconst b = $json;\n\n// Compat: normaliza campos Evolution\nb.phone = b.phone || b.number;\nb.message = b.message || { text: (b.text || '') };\n\n// N√∫mero\nlet jid = b.number || b.from || b.key?.remoteJid || b.participant || b.chatId || '';\njid = String(jid).replace(/@.*$/,'');\nlet digits = jid.replace(/\\D/g,'');\nif (!digits.startsWith('55') && digits.length >= 10) digits = '55' + digits;\n\n// Texto\nconst text = b.message?.text || b.message?.conversation || b.message?.extendedTextMessage?.text || b.message?.imageMessage?.caption || b.message?.videoMessage?.caption || b.text || '';\n\n// URL de √°udio (varia√ß√µes comuns)\nconst audioUrl = b.message?.audio?.url || b.message?.audioMessage?.url || b.audioUrl || '';\n\nreturn {\n telefone_cliente: digits, // 55DDDN√öMERO\n telefone_limpo: digits.replace(/^55/,''), // DDD+N√öMERO\n telefone_invalido: !(digits && digits.replace(/^55/, '').length >= 10 && digits.replace(/^55/, '').length <= 11),\n mensagem_cliente: text || (audioUrl ? '[√Åudio recebido]' : ''),\n tipo_mensagem: audioUrl ? 'audio' : 'texto',\n precisa_transcrever: !!audioUrl,\n audio_url: audioUrl,\n timestamp_resposta: new Date().toISOString(),\n webhook_completo: b\n};"
         },
         "id":"17",
         "name":"Processar Resposta Cliente",
         "type":"n8n-nodes-base.code",
         "position":[
            2650,
            500
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.precisa_transcrever}}",
                     "value2":true
                  }
               ]
            }
         },
         "id":"18",
         "name":"√â √Åudio?",
         "type":"n8n-nodes-base.if",
         "position":[
            3050,
            500
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.telefone_invalido}}",
                     "value2":false
                  }
               ]
            }
         },
         "id":"64",
         "name":"Telefone V√°lido? (Webhook)",
         "type":"n8n-nodes-base.if",
         "position":[
            2850,
            500
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{$json.telefone_cliente}}"
                  },
                  {
                     "name":"text",
                     "value":"üéß Recebi seu √°udio! Deixa eu ouvir com aten√ß√£o..."
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"19",
         "name":"Confirmar √Åudio Recebido",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            3050,
            600
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "url":"={{$json.audio_url}}",
            "options":{
               "response":{
                  "responseFormat":"file",
                  "binaryPropertyName":"data"
               }
            }
         },
         "id":"25",
         "name":"Baixar √Åudio",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            3050,
            700
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "resource":"audio",
            "operation":"transcription",
            "model":"whisper-1",
            "binaryPropertyName":"data",
            "options":{
               "language":"pt",
               "temperature":0.2
            }
         },
         "id":"20",
         "name":"Transcrever √Åudio OpenAI",
         "type":"@n8n/n8n-nodes-langchain.openAi",
         "position":[
            3250,
            600
         ],
         "typeVersion":1.3
      },
      {
         "parameters":{
            "mode":"combine",
            "combinationMode":"pass-through",
            "options":{
               
            }
         },
         "id":"21",
         "name":"Merge Respostas",
         "type":"n8n-nodes-base.merge",
         "position":[
            3450,
            500
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "functionCode":"// Atualiza contexto com resposta do cliente\nconst trans = $json.text || $json.data?.text || $json.transcricao || '[√°udio sem texto]';\nconst mensagemCliente = $json.tipo_mensagem === 'audio' ? trans : $json.mensagem_cliente;\nconst contextoAnterior = JSON.parse($json.contexto_conversa || '{}');\n\n// Adiciona ao hist√≥rico\ncontextoAnterior.historico = contextoAnterior.historico || [];\ncontextoAnterior.historico.push({\n tipo: 'cliente',\n mensagem: mensagemCliente,\n timestamp: new Date().toISOString()\n});\n\n// Analisa informa√ß√µes fornecidas\nconst msg = mensagemCliente.toLowerCase();\nconst dadosExtraidos = {};\n\n// Extrai idades\nconst idadesMatch = mensagemCliente.match(/\\d{1,2}\\s*anos?/gi);\nif (idadesMatch) {\n dadosExtraidos.idades_encontradas = idadesMatch;\n contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'idades_dependentes');\n}\n\n// Detecta CNPJ/MEI\nif (/cnpj|mei|empresa/.test(msg)) {\n dadosExtraidos.tipo_documento = 'empresa';\n contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'tipo_documento');\n} else if (/cpf|pessoa.?f[√≠i]sica/.test(msg)) {\n dadosExtraidos.tipo_documento = 'cpf';\n contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'tipo_documento');\n}\n\n// Detecta hospitais\nconst hospitais = ['einstein', 'sirio', 'oswaldo', 'beneficencia', 'samaritano', 'santa catarina', 'sao camilo', '9 de julho', 'copa star'];\nhospitais.forEach(hospital => {\n if (msg.includes(hospital)) {\n dadosExtraidos.hospital_preferencia = hospital;\n contextoAnterior.dados_faltantes = contextoAnterior.dados_faltantes.filter(d => d !== 'hospital_preferencia');\n }\n});\n\n// Detecta planos\nconst planos = ['amil', 'sulamerica', 'unimed', 'notredame', 'hapvida', 'prevent senior'];\nplanos.forEach(plano => {\n if (msg.includes(plano)) {\n dadosExtraidos.plano_atual = plano;\n }\n});\n\n// Detecta doen√ßas\nif (/diabetes|hipertens|pressao alta|cancer|cardiaco|transplante|dialise/.test(msg)) {\n dadosExtraidos.tem_preexistencia = true;\n const doencasGraves = /cancer|transplante|dialise|cardiaco grave/.test(msg);\n if (doencasGraves) {\n dadosExtraidos.doenca_grave = true;\n }\n}\n\n// Atualiza contexto\ncontextoAnterior.dados_coletados = { ...(contextoAnterior.dados_coletados || {}), ...dadosExtraidos };\n\n// Verifica se tem todos os dados\nconst dadosCompletos = contextoAnterior.dados_faltantes.length === 0;\n\nreturn {\n ...$json,\n mensagem_cliente_processada: mensagemCliente,\n dados_extraidos: dadosExtraidos,\n contexto_atualizado: JSON.stringify(contextoAnterior),\n dados_completos: dadosCompletos,\n total_interacoes: contextoAnterior.historico.length\n};"
         },
         "id":"22",
         "name":"Atualizar Contexto Conversa",
         "type":"n8n-nodes-base.code",
         "position":[
            3650,
            500
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.dados_completos}}",
                     "value2":true
                  }
               ]
            }
         },
         "id":"23",
         "name":"Dados Completos?",
         "type":"n8n-nodes-base.if",
         "position":[
            3850,
            500
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "resource":"chat",
            "model":"gpt-4o",
            "messages":{
               "values":[
                  {
                     "role":"system",
                     "content":"={{$json.prompt_sistema}}"
                  },
                  {
                     "role":"user",
                     "content":"CONTEXTO:\n{{$json.contexto_atualizado}}\n\nINFO_JA_COLETADA (N√ÉO PERGUNTAR NOVAMENTE):\n{{$json.info_ja_coletada}}\n\nRETORNE APENAS JSON V√ÅLIDO:\n{\n \"mensagem_cliente\": \"string\",\n \"classificacao_final\": \"QUENTE|MORNO|FRIO|PORTABILIDADE|ANALISE_HUMANA\",\n \"score_final\": 0-100,\n \"qualificacao_completa\": true|false\n}"
                  }
               ]
            },
            "options":{
               "temperature":0.7,
               "maxTokens":1500,
               "responseFormat":{
                  "type":"json_object"
               }
            }
         },
         "id":"24",
         "name":"OpenAI Continuar Conversa",
         "type":"@n8n/n8n-nodes-langchain.openAi",
         "position":[
            4050,
            600
         ],
         "typeVersion":1.3
      },
      {
         "parameters":{
            "functionCode":"// Preparar resumo completo para vendedor\nconst contexto = JSON.parse($json.contexto_atualizado);\nconst dados = contexto.dados_coletados || {};\nconst dadosIniciais = contexto.dados_ja_coletados || {};\n\n// Monta resumo estruturado\nconst resumo = {\n lead_id: $json.lead_id,\n nome: dadosIniciais.nome,\n telefone: dadosIniciais.telefone,\n email: dadosIniciais.email,\n cidade_estado: `${dadosIniciais.cidade}/${dadosIniciais.estado}`,\n idade_titular: dadosIniciais.idade_titular,\n total_vidas: dadosIniciais.total_vidas,\n idades_dependentes: dados.idades_encontradas ? dados.idades_encontradas.join(', ') : 'N√£o informado',\n tipo_contratacao: dados.tipo_documento === 'empresa' ? 'CNPJ/MEI' : dados.tipo_documento === 'cpf' ? 'CPF' : 'N√£o informado',\n hospital_preferencia: dados.hospital_preferencia || 'Nenhum espec√≠fico',\n plano_atual: dados.plano_atual || 'N√£o possui',\n tem_preexistencia: dados.tem_preexistencia ? 'Sim' : 'N√£o',\n doenca_grave: dados.doenca_grave ? 'Sim' : 'N√£o',\n classificacao: contexto.classificacao_inicial,\n score: contexto.score,\n timestamp_qualificacao: new Date().toISOString()\n};\n\n// Determina plano sugerido\nlet plano_sugerido = 'Efetivo';\nif (dados.hospital_preferencia) {\n if (['einstein', 'sirio'].includes(dados.hospital_preferencia)) {\n plano_sugerido = 'Nacional Plus ou Premium';\n } else if (['oswaldo', 'santa catarina'].includes(dados.hospital_preferencia)) {\n plano_sugerido = 'Nacional';\n } else if (['9 de julho', 'santa joana'].includes(dados.hospital_preferencia)) {\n plano_sugerido = 'Ideal';\n } else if (['sao camilo', 'santa paula'].includes(dados.hospital_preferencia)) {\n plano_sugerido = 'Flex';\n }\n}\n\n// Documentos necess√°rios\nlet documentos = ['RG', 'CPF', 'Comprovante de resid√™ncia'];\nif (dados.tipo_documento === 'empresa') {\n documentos.push('Cart√£o CNPJ', 'Contrato Social', '√öltima altera√ß√£o contratual');\n}\nif (dados.tem_preexistencia) {\n documentos.push('Relat√≥rios m√©dicos', 'Receitas atuais');\n}\nif (dados.plano_atual) {\n documentos.push('Carteirinha plano atual', '3 √∫ltimos boletos pagos');\n}\n\nresumo.plano_sugerido = plano_sugerido;\nresumo.documentos_necessarios = documentos.join(', ');\n\nreturn {\n ...$json,\n resumo_vendedor: resumo,\n mensagem_vendedor_formatada: `\nüî• LEAD QUALIFICADO - ${resumo.classificacao}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüë§ ${resumo.nome}\nüì± ${resumo.telefone}\nüìç ${resumo.cidade_estado}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\nüìä DADOS DO GRUPO:\n‚Ä¢ Titular: ${resumo.idade_titular} anos\n‚Ä¢ Total de vidas: ${resumo.total_vidas}\n‚Ä¢ Dependentes: ${resumo.idades_dependentes}\n‚Ä¢ Contrata√ß√£o: ${resumo.tipo_contratacao}\n\nüè• PREFER√äNCIAS:\n‚Ä¢ Hospital: ${resumo.hospital_preferencia}\n‚Ä¢ Plano atual: ${resumo.plano_atual}\n‚Ä¢ Preexist√™ncia: ${resumo.tem_preexistencia}\n\nüíº SUGEST√ÉO: ${resumo.plano_sugerido}\nüìÑ DOCUMENTOS: ${resumo.documentos_necessarios}\n\n‚≠ê SCORE: ${resumo.score}/100\n\n`\n};"
         },
         "id":"26",
         "name":"Preparar Resumo Vendedor Completo",
         "type":"n8n-nodes-base.code",
         "position":[
            4050,
            400
         ],
         "typeVersion":2
      },
      {
         "parameters":{
            "conditions":{
               "string":[
                  {
                     "value1":"={{$json.resumo_vendedor.classificacao}}",
                     "operation":"oneOf",
                     "value2":"QUENTE,MORNO,FRIO,PORTABILIDADE,ANALISE_HUMANA"
                  }
               ]
            },
            "fallbackOutput":"always"
         },
         "id":"27",
         "name":"Selecionar Destinos",
         "type":"n8n-nodes-base.switch",
         "position":[
            4250,
            400
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "operation":"append",
            "sheetId":"{{$env.SHEET_ID_QUALIFICADOS}}",
            "sheetName":"Leads_Qualificados",
            "columns":{
               "mappingMode":"defineBelow",
               "value":{
                  "Lead_ID":"={{$json.resumo_vendedor.lead_id}}",
                  "Nome":"={{$json.resumo_vendedor.nome}}",
                  "Telefone":"={{$json.resumo_vendedor.telefone}}",
                  "Email":"={{$json.resumo_vendedor.email}}",
                  "Cidade_Estado":"={{$json.resumo_vendedor.cidade_estado}}",
                  "Idade_Titular":"={{$json.resumo_vendedor.idade_titular}}",
                  "Total_Vidas":"={{$json.resumo_vendedor.total_vidas}}",
                  "Idades_Dependentes":"={{$json.resumo_vendedor.idades_dependentes}}",
                  "Tipo_Contratacao":"={{$json.resumo_vendedor.tipo_contratacao}}",
                  "Hospital_Preferencia":"={{$json.resumo_vendedor.hospital_preferencia}}",
                  "Plano_Atual":"={{$json.resumo_vendedor.plano_atual}}",
                  "Preexistencia":"={{$json.resumo_vendedor.tem_preexistencia}}",
                  "Doenca_Grave":"={{$json.resumo_vendedor.doenca_grave}}",
                  "Classificacao":"={{$json.resumo_vendedor.classificacao}}",
                  "Score":"={{$json.resumo_vendedor.score}}",
                  "Plano_Sugerido":"={{$json.resumo_vendedor.plano_sugerido}}",
                  "Documentos":"={{$json.resumo_vendedor.documentos_necessarios}}",
                  "Data_Qualificacao":"={{$json.resumo_vendedor.timestamp_qualificacao}}",
                  "Status":"Qualificado - Aguardando Vendedor"
               }
            },
            "options":{
               
            }
         },
         "id":"28",
         "name":"Salvar Leads Qualificados",
         "type":"n8n-nodes-base.googleSheets",
         "position":[
            4450,
            200
         ],
         "typeVersion":4
      },
      {
         "parameters":{
            "sendTo":"{{$env.VENDOR_DEFAULT_EMAIL}}",
            "subject":"üî• {{$json.resumo_vendedor.classificacao}} - {{$json.resumo_vendedor.nome}} | Score: {{$json.resumo_vendedor.score}}",
            "emailType":"html",
            "message":"<div style='font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;'>\n <div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; border-radius: 10px 10px 0 0;'>\n <h1 style='color: white; margin: 0; text-align: center;'>üéØ LEAD QUALIFICADO</h1>\n <h2 style='color: white; margin: 10px 0 0 0; text-align: center;'>{{$json.resumo_vendedor.classificacao}} - Score: {{$json.resumo_vendedor.score}}/100</h2>\n </div>\n \n <div style='background: white; padding: 30px; border: 1px solid #e0e0e0; border-top: 0;'>\n <div style='background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;'>\n <h3 style='color: #333; margin-top: 0;'>üë§ Dados do Cliente</h3>\n <p style='margin: 5px 0;'><strong>Nome:</strong> {{$json.resumo_vendedor.nome}}</p>\n <p style='margin: 5px 0;'><strong>Telefone:</strong> <a href='tel:{{$json.resumo_vendedor.telefone}}'>{{$json.resumo_vendedor.telefone}}</a></p>\n <p style='margin: 5px 0;'><strong>Email:</strong> <a href='mailto:{{$json.resumo_vendedor.email}}'>{{$json.resumo_vendedor.email}}</a></p>\n <p style='margin: 5px 0;'><strong>Localiza√ß√£o:</strong> {{$json.resumo_vendedor.cidade_estado}}</p>\n </div>\n \n <div style='background: #fff3cd; padding: 20px; border-radius: 8px; margin-bottom: 20px;'>\n <h3 style='color: #333; margin-top: 0;'>üìä Informa√ß√µes do Grupo</h3>\n <p style='margin: 5px 0;'><strong>Idade Titular:</strong> {{$json.resumo_vendedor.idade_titular}} anos</p>\n <p style='margin: 5px 0;'><strong>Total de Vidas:</strong> {{$json.resumo_vendedor.total_vidas}}</p>\n <p style='margin: 5px 0;'><strong>Dependentes:</strong> {{$json.resumo_vendedor.idades_dependentes}}</p>\n <p style='margin: 5px 0;'><strong>Tipo de Contrata√ß√£o:</strong> {{$json.resumo_vendedor.tipo_contratacao}}</p>\n </div>\n \n <div style='background: #d4edda; padding: 20px; border-radius: 8px; margin-bottom: 20px;'>\n <h3 style='color: #333; margin-top: 0;'>üè• Prefer√™ncias e Hist√≥rico</h3>\n <p style='margin: 5px 0;'><strong>Hospital Preferido:</strong> {{$json.resumo_vendedor.hospital_preferencia}}</p>\n <p style='margin: 5px 0;'><strong>Plano Atual:</strong> {{$json.resumo_vendedor.plano_atual}}</p>\n <p style='margin: 5px 0;'><strong>Preexist√™ncia:</strong> {{$json.resumo_vendedor.tem_preexistencia}}</p>\n <p style='margin: 5px 0;'><strong>Doen√ßa Grave:</strong> {{$json.resumo_vendedor.doenca_grave}}</p>\n </div>\n \n <div style='background: #cfe2ff; padding: 20px; border-radius: 8px;'>\n <h3 style='color: #333; margin-top: 0;'>üíº Recomenda√ß√µes</h3>\n <p style='margin: 5px 0;'><strong>Plano Sugerido:</strong> <span style='background: #28a745; color: white; padding: 3px 10px; border-radius: 3px;'>{{$json.resumo_vendedor.plano_sugerido}}</span></p>\n <p style='margin: 5px 0;'><strong>Documentos Necess√°rios:</strong></p>\n <p style='margin: 5px 0 5px 20px; font-size: 14px;'>{{$json.resumo_vendedor.documentos_necessarios}}</p>\n </div>\n \n <div style='text-align: center; margin-top: 30px;'>\n <a href='https://wa.me/{{$json.telefone_cliente}}' style='display: inline-block; background: #25D366; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;'>üí¨ Contatar via WhatsApp</a>\n </div>\n </div>\n \n <div style='background: #f8f9fa; padding: 15px; text-align: center; border-radius: 0 0 10px 10px;'>\n <p style='margin: 0; color: #666; font-size: 12px;'>Lead qualificado em {{$json.resumo_vendedor.timestamp_qualificacao}}</p>\n </div>\n</div>",
            "options":{
               
            }
         },
         "id":"29",
         "name":"Email Vendedor Rico Formatado",
         "type":"n8n-nodes-base.gmail",
         "position":[
            4450,
            300
         ],
         "typeVersion":2.1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{$env.VENDORS_LIST}}"
                  },
                  {
                     "name":"text",
                     "value":"={{$json.mensagem_vendedor_formatada}}"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"30",
         "name":"WhatsApp Vendedor",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            4450,
            400
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"https://api.agendor.com.br/v3/deals",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Token {{$env.AGENDOR_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"title",
                     "value":"={{$json.resumo_vendedor.nome}} - Bradesco {{$json.resumo_vendedor.plano_sugerido}}"
                  },
                  {
                     "name":"value",
                     "value":"={{$json.resumo_vendedor.total_vidas * 350}}"
                  },
                  {
                     "name":"contact",
                     "value":"={\n \"name\": \"{{$json.resumo_vendedor.nome}}\",\n \"email\": \"{{$json.resumo_vendedor.email}}\",\n \"phone\": \"{{$json.resumo_vendedor.telefone}}\",\n \"city\": \"{{$json.resumo_vendedor.cidade_estado}}\"\n}"
                  },
                  {
                     "name":"description",
                     "value":"={{$json.mensagem_vendedor_formatada}}"
                  },
                  {
                     "name":"ranking",
                     "value":"={{$json.resumo_vendedor.score}}"
                  },
                  {
                     "name":"dealStage",
                     "value":"1"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"31",
         "name":"Criar Deal Agendor",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            4450,
            500
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"Perfeito! üéâ\n\nJ√° tenho todas as informa√ß√µes necess√°rias.\n\nUm consultor especializado entrar√° em contato com voc√™ em breve com uma proposta personalizada.\n\nEnquanto isso, se tiver alguma d√∫vida, pode me chamar aqui!\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"32",
         "name":"Mensagem Final Cliente",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            4650,
            400
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "amount":300,
            "unit":"seconds"
         },
         "id":"33",
         "name":"Timer 5 minutos",
         "type":"n8n-nodes-base.wait",
         "position":[
            4850,
            400
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json.telefone_limpo}}"
                  },
                  {
                     "name":"text",
                     "value":"Oi {{$json.nome}}, ainda estou por aqui! üòä\n\nVi que voc√™ demonstrou interesse no Bradesco Sa√∫de.\n\nPosso te ajudar com alguma d√∫vida espec√≠fica?\n\n√â super r√°pido montar sua proposta!\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"34",
         "name":"Reengajamento 5min",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            5050,
            400
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "rule":{
               "cron":[
                  {
                     "hour":10,
                     "minute":0
                  }
               ]
            }
         },
         "id":"35",
         "name":"Schedule Di√°rio 10:00",
         "type":"n8n-nodes-base.scheduleTrigger",
         "position":[
            250,
            700
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "operation":"read",
            "sheetId":"{{$env.SHEET_ID_BRUTOS}}",
            "sheetName":"Leads_Brutos",
            "filtersUI":{
               "values":[
                  {
                     "lookupColumn":"Status",
                     "lookupValue":"Novo - Aguardando IA"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"36",
         "name":"Buscar Leads Pendentes",
         "type":"n8n-nodes-base.googleSheets",
         "position":[
            450,
            700
         ],
         "typeVersion":4
      },
      {
         "parameters":{
            "batchSize":1,
            "options":{
               
            }
         },
         "id":"37",
         "name":"Loop Leads",
         "type":"n8n-nodes-base.splitInBatches",
         "position":[
            650,
            700
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "method":"POST",
            "url":"={{$env.EVOLUTION_URL}}/message/sendText/{{$env.EVOLUTION_INSTANCE}}",
            "sendHeaders":true,
            "headerParameters":{
               "parameters":[
                  {
                     "name":"Authorization",
                     "value":"Bearer {{$env.EVOLUTION_TOKEN}}"
                  },
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            },
            "sendBody":true,
            "bodyParameters":{
               "parameters":[
                  {
                     "name":"number",
                     "value":"={{'55' + $json['Telefone com DDD'].replace(/\\D/g,'')}}"
                  },
                  {
                     "name":"text",
                     "value":"Bom dia {{$json['Nome Completo']}}! ‚òÄÔ∏è\n\nOntem voc√™ demonstrou interesse no Bradesco Sa√∫de.\n\nAinda precisa de um plano de sa√∫de?\n\nConsigo valores especiais para contrata√ß√£o hoje! üíô\n\n√â s√≥ me responder aqui.\n\n‚Äî Mariana ¬∑ Bradesco Sa√∫de"
                  }
               ]
            },
            "options":{
               
            }
         },
         "id":"38",
         "name":"Mensagem Dia Seguinte",
         "type":"n8n-nodes-base.httpRequest",
         "position":[
            850,
            700
         ],
         "typeVersion":4.1
      },
      {
         "parameters":{
            "amount":30,
            "unit":"seconds"
         },
         "id":"39",
         "name":"Intervalo Entre Mensagens",
         "type":"n8n-nodes-base.wait",
         "position":[
            1050,
            700
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "operation":"update",
            "sheetId":"{{$env.SHEET_ID_BRUTOS}}",
            "sheetName":"Leads_Brutos",
            "updateKey":"Lead_ID",
            "value":"={{$json['Lead_ID']}}",
            "columns":{
               "mappingMode":"defineBelow",
               "value":{
                  "Status":"Remarketing Enviado",
                  "Remarketing_Data":"={{$now}}"
               }
            },
            "options":{
               
            }
         },
         "id":"40",
         "name":"Atualizar Status Remarketing",
         "type":"n8n-nodes-base.googleSheets",
         "position":[
            1250,
            700
         ],
         "typeVersion":4
      },
      {
         "parameters":{
            "respondWith":"json",
            "responseBody":"{\"ok\": true}",
            "responseHeaders":{
               "entries":[
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            }
         },
         "id":"57",
         "name":"Responder Webhook Landing",
         "type":"n8n-nodes-base.respondToWebhook",
         "position":[
            2650,
            250
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "respondWith":"json",
            "responseBody":"{\"ok\": true}",
            "responseHeaders":{
               "entries":[
                  {
                     "name":"Content-Type",
                     "value":"application/json"
                  }
               ]
            }
         },
         "id":"58",
         "name":"Responder Webhook Cliente",
         "type":"n8n-nodes-base.respondToWebhook",
         "position":[
            3650,
            850
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.telefone_invalido}}",
                     "value2":false
                  }
               ]
            }
         },
         "id":"56",
         "name":"Telefone V√°lido? (Inicial)",
         "type":"n8n-nodes-base.if",
         "position":[
            850,
            250
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.telefone_invalido}}",
                     "value2":false
                  }
               ]
            }
         },
         "id":"60",
         "name":"Telefone V√°lido? (Cliente)",
         "type":"n8n-nodes-base.if",
         "position":[
            4250,
            650
         ],
         "typeVersion":1
      },
      {
         "parameters":{
            "conditions":{
               "boolean":[
                  {
                     "value1":"={{$json.telefone_invalido}}",
                     "value2":false
                  }
               ]
            }
         },
         "id":"61",
         "name":"Telefone V√°lido? (Final)",
         "type":"n8n-nodes-base.if",
         "position":[
            4950,
            260
         ],
         "typeVersion":1
      }
   ],
   "connections":{
      "Recebe Formul√°rio Landing":{
         "main":[
            [
               {
                  "node":"Processar Dados Iniciais",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Processar Dados Iniciais":{
         "main":[
            [
               {
                  "node":"Salvar Google Sheets Brutos",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Email Controle Interno",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Telefone V√°lido? (Inicial)",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Responder Webhook Landing",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Telefone V√°lido? (Inicial)":{
         "main":[
            [
               {
                  "node":"WhatsApp Resposta Inicial",
                  "type":"main",
                  "index":0
               }
            ],
            [
               
            ]
         ]
      },
      "WhatsApp Resposta Inicial":{
         "main":[
            [
               {
                  "node":"Aguardar Resposta ou 50seg",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Aguardar Resposta ou 50seg":{
         "main":[
            [
               {
                  "node":"Status Digitando ON",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Status Digitando ON":{
         "main":[
            [
               {
                  "node":"Preparar Prompt Mariana",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Preparar Prompt Mariana":{
         "main":[
            [
               {
                  "node":"OpenAI Primeira Qualifica√ß√£o",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "OpenAI Primeira Qualifica√ß√£o":{
         "main":[
            [
               {
                  "node":"Processar Resposta OpenAI",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Processar Resposta OpenAI":{
         "main":[
            [
               {
                  "node":"√â Portabilidade?",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "√â Portabilidade?":{
         "main":[
            [
               {
                  "node":"Enviar Link Portabilidade",
                  "type":"main",
                  "index":0
               }
            ],
            [
               {
                  "node":"Simular Tempo Digita√ß√£o",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Simular Tempo Digita√ß√£o":{
         "main":[
            [
               {
                  "node":"Status Digitando OFF",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Status Digitando OFF":{
         "main":[
            [
               {
                  "node":"WhatsApp Enviar Mariana",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Webhook Resposta Cliente WhatsApp":{
         "main":[
            [
               {
                  "node":"Processar Resposta Cliente",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Processar Resposta Cliente":{
         "main":[
            [
               {
                  "node":"Telefone V√°lido? (Webhook)",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Telefone V√°lido? (Webhook)":{
         "main":[
            [
               {
                  "node":"√â √Åudio?",
                  "type":"main",
                  "index":0
               }
            ],
            [
               
            ]
         ]
      },
      "√â √Åudio?":{
         "main":[
            [
               {
                  "node":"Confirmar √Åudio Recebido",
                  "type":"main",
                  "index":0
               }
            ],
            [
               {
                  "node":"Merge Respostas",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Confirmar √Åudio Recebido":{
         "main":[
            [
               {
                  "node":"Baixar √Åudio",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Baixar √Åudio":{
         "main":[
            [
               {
                  "node":"Transcrever √Åudio OpenAI",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Transcrever √Åudio OpenAI":{
         "main":[
            [
               {
                  "node":"Merge Respostas",
                  "type":"main",
                  "index":1
               }
            ]
         ]
      },
      "Merge Respostas":{
         "main":[
            [
               {
                  "node":"Atualizar Contexto Conversa",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Atualizar Contexto Conversa":{
         "main":[
            [
               {
                  "node":"Dados Completos?",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Dados Completos?":{
         "main":[
            [
               {
                  "node":"Preparar Resumo Vendedor Completo",
                  "type":"main",
                  "index":0
               }
            ],
            [
               {
                  "node":"OpenAI Continuar Conversa",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "OpenAI Continuar Conversa":{
         "main":[
            [
               {
                  "node":"Telefone V√°lido? (Cliente)",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Telefone V√°lido? (Cliente)":{
         "main":[
            [
               {
                  "node":"Processar Resposta OpenAI (loop)",
                  "type":"main",
                  "index":0
               }
            ],
            [
               
            ]
         ]
      },
      "Preparar Resumo Vendedor Completo":{
         "main":[
            [
               {
                  "node":"Selecionar Destinos",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Selecionar Destinos":{
         "main":[
            [
               {
                  "node":"Salvar Leads Qualificados",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Email Vendedor Rico Formatado",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"WhatsApp Vendedor",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Criar Deal Agendor",
                  "type":"main",
                  "index":0
               },
               {
                  "node":"Mensagem Final Cliente",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Mensagem Final Cliente":{
         "main":[
            [
               {
                  "node":"Timer 5 minutos",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Timer 5 minutos":{
         "main":[
            [
               {
                  "node":"Reengajamento 5min",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Schedule Di√°rio 10:00":{
         "main":[
            [
               {
                  "node":"Buscar Leads Pendentes",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Buscar Leads Pendentes":{
         "main":[
            [
               {
                  "node":"Loop Leads",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Loop Leads":{
         "main":[
            [
               {
                  "node":"Mensagem Dia Seguinte",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Mensagem Dia Seguinte":{
         "main":[
            [
               {
                  "node":"Intervalo Entre Mensagens",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Intervalo Entre Mensagens":{
         "main":[
            [
               {
                  "node":"Atualizar Status Remarketing",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Atualizar Status Remarketing":{
         "main":[
            [
               {
                  "node":"Loop Leads",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Processar Resposta OpenAI (loop)":{
         "main":[
            [
               {
                  "node":"Condi√ß√£o de Parada Loop",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Condi√ß√£o de Parada Loop":{
         "main":[
            [
               {
                  "node":"Preparar Resumo Vendedor Completo",
                  "type":"main",
                  "index":0
               }
            ],
            [
               {
                  "node":"WhatsApp Enviar Mariana (continua√ß√£o)",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "WhatsApp Enviar Mariana (continua√ß√£o)":{
         "main":[
            [
               {
                  "node":"Webhook Resposta Cliente WhatsApp",
                  "type":"main",
                  "index":0
               }
            ]
         ]
      },
      "Responder Webhook Cliente":{
         "main":[
            [
               
            ]
         ]
      }
   }
}
